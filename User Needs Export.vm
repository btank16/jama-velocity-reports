#if( $format == 'doc')
MIME-Version: 1.0
Content-Type: multipart/related; boundary="----=_NextPart_01DA8992.E7786AB0"
#end 

#########################################################################################################################
##======================================================================================================================
## OUTLINE  
## [user directions to modify in brackets]
##======================================================================================================================
##
## + INITIALIZATION 
##     *    JAMA VELOCITY API 
##     *    ITEM TYPE KEYS / API IDS [set keys / api ids for conditional filtering of item types]
##     *    DOCUMENT INITIALIZATION [set include cross refs. and custom parameters]
##     *    TABLES OF... INITIALIZATION [set ToC, ToF, ToT flags to T/F]
##     *    FORMATTING GLOBAL VARIABLES [set style global variables]
## 
## + WORD HTML HEAD
##     *    WORD EMBEDDED CSS [set styles]
##
##
## + TEMPLATE MACROS
##     *    RICH TEXT: formatRichText,formatTableCell,formatText,covertHyperlinks 
##     *    RICH TEXT IMAGE: convertFigures,buildBase64ImgContent,getImgDimensions,
##                           formatEquation_DOC,formatImgWithOptionForCaptions_DOC,   
##     *    RICH TEXT TABLE: formatTables,covertWidths,buildTableCaptions_DOC
##     *    RELATIONSHIPS: getRelationships,getBaselineRelationships
##     *    CONTEXT: getContainer,getReferenceableDocIds,printApproversTable
##     *    ITEM LINKS: createLink
##     *    DATE TIME: getDate,getDateTime
##     *    HEADERS & FOOTERS: responsiveHeaderFooter
##     *    HEADING: getHierarchyLevel,formatItemDefault
##     *    CUSTOM: [insert custom macros]
##
## + REPORT BODY:
##     *    TITLE PAGE [paste in title page from mockup]
##     *    TABLES OF... 
##     *    OUTPUT DOCUMENT LIST [customize item type mapping/formatting]
##
## + TEMPLATE TAIL - WORD SPECIFICATIONS
##     *    EMBEDDED IMAGES 
##     *    WORD OBJECTS 
##     *    WORD EMBEDDED FILE LIST
##
##====================================================================================================================== 
#######################################################################################################################
     

#########################################################################################################################
##  ====================================================================================================================
##   Jama SoftwareÂ® VELOCITY API  https://velocity.jamasoftware.com/
##  ====================================================================================================================
##   The 'Source' Interfaces are utilized to access the API and from them traverse to the Sub-Interfaces: 
##  ------------------------------------------
##   $adminSource, $baselineSource, $commentSource, $documentSource, $eventSource, 
##   $filterSource, $projectSource, $testSource, $userSource, $releaseSource
##
##   Global Constants available without declaration:  
##  ------------------------------------------
##   $baseUrl, $project, $contextId, $documentList, $contextType, $format, $report_name 
## ======================================================================================================================
#########################################################################################################################


#########################################################################################################################
## ======================================================================================================================
##
##  ITEM TYPE KEYS/API IDS
##  Set for conditional filtering of item types in the template
##
## ======================================================================================================================
#set( $cmpKey = "CMP")
#set( $setKey = "SET")
#set( $fldKey = "FLD")
#set( $txtKey = "TXT")
##
##
##
## ======================================================================================================================
#########################################################################################################################


#########################################################################################################################
##======================================================================================================================
## DOCUMENT INITIALIZATION  
## Sets the following information for use in the rest of the template
##
##    $baselineMode ..........  Flag that lets the template know if export is from a baseline or not. 
##    $baseline, $baselineId..  If baselineMode the baseline the report is exported from and said baseline id. 
##    $containerDoc ..........  Stores the export location of the report aka the 'context'. 
##                              The 'context' can potentially be Item/s, Test Cycle, Test Plan, Baseline, or Filter.  
##                              It can be used for headers, footers & title page, e.g. $containerDoc.name
##   
##    $referenencableDocIds...  List of all item ids that can be cross-referenced w/ internal links available in the export.
##    $includeCrossReferences.  Includes cross-references/internal links found in Rich Text fields.                    
##======================================================================================================================
##     Template File Specifications
##------------------------------------------- 
#set( $boundaryString = "------=_NextPart_01DA8992.E7786AB0")
#set( $timeZone = "America/Los_Angeles" ) 
#set( $dataURI_base64_count = 0 )
#set( $referenceableDocIds = [] )
#set( $figureList = [] )
#set( $fileList = [] )
##
##
##     Baseline Variables
##------------------------------------------- 
#set( $baseline = false )
#set( $baselineMode = false )
#set( $baselineId = false )
##
##
##     Document Link Cross References       
##-------------------------------------------
#set( $includeCrossReferences = true )
##
##
##     Context-Sensitive Export?
##-------------------------------------------
#if( $documentList && $documentList.size() > 0) ## if this is a Context-Sensitive export 
  #if( $!contextType && $contextType.toUpperCase().contains("BASELINE") )
    #set( $baseline = $baselineSource.getBaseLine($mathTool.toInteger($contextId)))
    #set( $baselineId = $baseline.id)
    #set( $baselineMode = true)
  #end 
  #getContainer( $baselineMode ) ## returns $containerDoc 
  #getReferenceableDocIds() ## returns: $referenencableDocIds
#end
#if( $containerDoc )
  #set( $title = $containerDoc.name) 
  ##set( $docNumber = $velocityReportUtil.getValueForField( $containerDoc, "document_id", $dateFormat ))
#else 
  #set( $title = "[Title]" )
#end
##
##     Custom Parameters        
##-------------------------------------------
## [insert custom conditions/logic here]
##
##
##
## ======================================================================================================================
#########################################################################################################################


#########################################################################################################################
##======================================================================================================================
## TABLES OF... INITIALIZATION 
## Set the preference for Tables of...
##
##
##    $tableOfContents: Any content in <h1>-<h6> tags and w/ MsoHeading7 class will be included in the ToC.
##    $tableOfFigures:  Tables exported from Jama Connect RT fields w/ source html <caption> will be included in ToT.
##    $tableOfTables:   Figures exported from Jama Connect RT fields w/ source html <figcaption> tags will be included in TOF. 
##                            
##    $TOT_includeAllTables, $TOF_includeAllFigures, $TOE_includeAllEquations:
##                  Automatically include all Tables/Figures exported from Jama Connect Rich Text fields regardless 
##                  of html <caption> or <figcaption> tags presence in the RT field. *Equations will be provided static 
##                  captions with dynamic count created by the template. 
##
##=====================================================================================================================
##  Initialize counts to be used if ToF, ToT, and/or Equation references
##-------------------------------------------
#set( $tableRefNum = 0) ## 'doc' counter > Tables
#set( $figureRefNum = 0) ## 'doc' counter > Figures 
#set( $equationRefNum = 0) ## 'doc' counter > Equations 
##
##
#set( $tableOfContents = true ) 
#set( $tableOfFigures = false )
#set( $tableOfTables = false )
##
##
#set( $TOT_includeAllTables = false )
#set( $TOF_includeAllFigures = false )
#set( $TOE_includeAllEquations = false )
##
## 
## If no TOT and/or no TOF option to include 'Table x' or 'Figure x' before caption content
##-------------------------------------------
#set( $TOT_includeCaptionPrefix = false )
#set( $TOF_includeFigCaptionPrefix = false )
##
## ======================================================================================================================
#########################################################################################################################


#########################################################################################################################
## ======================================================================================================================
##
##  FORMATTING VARIABLES
##  Below customize a mapping for both font and type scale; the mapping is referenced in the style sections (WORD)
## ======================================================================================================================
##  Max page dimensions influence image and table scaling,
##  Page size in pixels based on a 72 PPI resolution which is effective to use against resizing of image pixel dimensions
##  * Formula Pixels to Inches: (# pixel value / 72 PPI Resolution) = # inch value
##  * Formula Inches to Pixels: (# inch value * 72 PPI Resolution) = # pixel value
##-------------------------------------------
#set( $maxPageWidth = 468 ) ## Max Page Width in pixels minus margin
#set( $maxPageHeight = 612 ) ## Max Page Height in pixels minus margin
#set( $pageMarginTB = "1in" ) ## Page Margin Top, Bottom 
#set( $pageMarginLR = "1in" ) ## Page Margin Left, Right

##
## Word Styles:
##-------------------------------------------
## This is a mapping of font and type scale; it is referenced for style property values in the WORD EMBEDDED CSS section below. 
## commonly used Word font-family: "Arial", "Calibri", "Helvetica", "Open Sans", "Times New Roman"
## type 'sans-serif' or 'serif'
#set( $primaryFont = {'family':"Arial",'type':'sans-serif'})
#set( $typeScale = {"p":"10pt","h1":"16pt","h2":"14pt","h3":"13pt","h4":"12pt","h5":"11pt","h6":"11pt","h7":"11pt",
                    "title":"20pt","subTitle":"16pt","tableCell":"10pt","header":"10pt","footer":"10pt"})
#set( $tocScale = {"tocHeading":"14pt","toc1":"12pt", "toc2":"11pt","toc3":"10pt","toc4":"10pt","toc5":"10pt","toc6":"10pt","toc7":"10pt"})

## 
##
## General Styles:
##----------------
#set( $headingColor = "black")
#set( $tableHeaderBgColor = "#b4c6e7" )
#set( $tableBorderColor = "#7F7F7F" )
## ======================================================================================================================
#########################################################################################################################




#########################################################################################################################
##   WORD HTML HEAD
#########################################################################################################################

------=_NextPart_01DA8992.E7786AB0
Content-Location: file:///C:/E04B5D12/WordPDFMaster.htm
Content-Type: text/html; charset="utf-8"

<html xmlns:v="urn:schemas-microsoft-com:vml"
xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:w="urn:schemas-microsoft-com:office:word"
xmlns:m="http://schemas.microsoft.com/office/2004/12/omml"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/html; charset=utf-8">
<meta name=ProgId content=Word.Document>
<meta name=Generator content="Microsoft Word 15">
<meta name=Originator content="Microsoft Word 15">
<link rel=File-List href="WordPDFMaster_files/filelist.xml">
<!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Template>Normal</o:Template>
  <o:Company>Jama SoftwareÂ®</o:Company>
  <o:Version>3.0</o:Version>
 </o:DocumentProperties>
 <o:OfficeDocumentSettings>
  <o:AllowPNG/>
 </o:OfficeDocumentSettings>
</xml><![endif]-->
<link rel=dataStoreItem href="WordPDFMaster_files/item0001.xml" target="WordPDFMaster_files/props002.xml">
<link rel=themeData href="WordPDFMaster_files/themedata.thmx">
<link rel=colorSchemeMapping href="WordPDFMaster_files/colorschememapping.xml">
<!--[if gte mso 9]><xml>
 <w:WordDocument>
  <w:TrackMoves/>
  <w:TrackFormatting/>
  <w:PunctuationKerning/>
  <w:ValidateAgainstSchemas/>
  <w:SaveIfXMLInvalid>false</w:SaveIfXMLInvalid>
  <w:IgnoreMixedContent>false</w:IgnoreMixedContent>
  <w:AlwaysShowPlaceholderText>false</w:AlwaysShowPlaceholderText>
  <w:DoNotPromoteQF/>
  <w:LidThemeOther>EN-US</w:LidThemeOther>
  <w:LidThemeAsian>X-NONE</w:LidThemeAsian>
  <w:LidThemeComplexScript>X-NONE</w:LidThemeComplexScript>
  <w:Compatibility>
   <w:BreakWrappedTables/>
   <w:SnapToGridInCell/>
   <w:WrapTextWithPunct/>
   <w:UseAsianBreakRules/>
   <w:DontGrowAutofit/>
   <w:SplitPgBreakAndParaMark/>
   <w:EnableOpenTypeKerning/>
   <w:DontFlipMirrorIndents/>
   <w:OverrideTableStyleHps/>
  </w:Compatibility>
  <m:mathPr>
   <m:mathFont m:val="Cambria Math"/>
   <m:brkBin m:val="before"/>
   <m:brkBinSub m:val="&#45;-"/>
   <m:smallFrac m:val="off"/>
   <m:dispDef/>
   <m:lMargin m:val="0"/>
   <m:rMargin m:val="0"/>
   <m:defJc m:val="centerGroup"/>
   <m:wrapIndent m:val="1440"/>
   <m:intLim m:val="subSup"/>
   <m:naryLim m:val="undOvr"/>
  </m:mathPr></w:WordDocument>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <w:LatentStyles DefLockedState="false" DefUnhideWhenUsed="false" DefSemiHidden="false" DefQFormat="false" DefPriority="99"
  LatentStyleCount="376">
  <w:LsdException Locked="false" Priority="0" QFormat="true" Name="Normal"/>
  <w:LsdException Locked="false" Priority="9" QFormat="true" Name="heading 1"/>
  <w:LsdException Locked="false" Priority="9" SemiHidden="true" UnhideWhenUsed="true" QFormat="true" Name="heading 2"/>
  <w:LsdException Locked="false" Priority="9" SemiHidden="true" UnhideWhenUsed="true" QFormat="true" Name="heading 3"/>
  <w:LsdException Locked="false" Priority="9" SemiHidden="true" UnhideWhenUsed="true" Name="heading 4"/>
  <w:LsdException Locked="false" Priority="9" SemiHidden="true" UnhideWhenUsed="true" QFormat="true" Name="heading 5"/>
  <w:LsdException Locked="false" Priority="9" SemiHidden="true" UnhideWhenUsed="true" QFormat="true" Name="heading 6"/>
  <w:LsdException Locked="false" Priority="9" SemiHidden="true" UnhideWhenUsed="true" QFormat="true" Name="heading 7"/>
  <w:LsdException Locked="false" Priority="9" SemiHidden="true" UnhideWhenUsed="true" QFormat="true" Name="heading 8"/>
  <w:LsdException Locked="false" Priority="9" SemiHidden="true" UnhideWhenUsed="true" QFormat="true" Name="heading 9"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true" Name="index 1"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true" Name="index 2"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true" Name="index 3"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true" Name="index 4"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true" Name="index 5"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true" Name="index 6"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true" Name="index 7"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true" Name="index 8"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true" Name="index 9"/>
  <w:LsdException Locked="false" Priority="39" SemiHidden="true" UnhideWhenUsed="true" Name="toc 1"/>
  <w:LsdException Locked="false" Priority="39" SemiHidden="true" UnhideWhenUsed="true" Name="toc 2"/>
  <w:LsdException Locked="false" Priority="39" SemiHidden="true" UnhideWhenUsed="true" Name="toc 3"/>
  <w:LsdException Locked="false" Priority="39" SemiHidden="true" UnhideWhenUsed="true" Name="toc 4"/>
  <w:LsdException Locked="false" Priority="39" SemiHidden="true" UnhideWhenUsed="true" Name="toc 5"/>
  <w:LsdException Locked="false" Priority="39" SemiHidden="true" UnhideWhenUsed="true" Name="toc 6"/>
  <w:LsdException Locked="false" Priority="39" SemiHidden="true" UnhideWhenUsed="true" Name="toc 7"/>
  <w:LsdException Locked="false" Priority="39" SemiHidden="true" UnhideWhenUsed="true" Name="toc 8"/>
  <w:LsdException Locked="false" Priority="39" SemiHidden="true" UnhideWhenUsed="true" Name="toc 9"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true" Name="Normal Indent"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true" Name="footnote text"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true" Name="annotation text"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true" Name="header"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true" Name="footer"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true" Name="index heading"/>
  <w:LsdException Locked="false" Priority="35" SemiHidden="true" UnhideWhenUsed="true" QFormat="true" Name="caption"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true" Name="table of figures"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true" Name="envelope address"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true" Name="envelope return"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true" Name="footnote reference"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true" Name="annotation reference"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true" Name="line number"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true" Name="page number"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true" Name="endnote reference"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true" Name="endnote text"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true" Name="table of authorities"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true" Name="macro"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true" Name="toa heading"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true" Name="List"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true" Name="List Bullet"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true" Name="List Number"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true" Name="List 2"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true" Name="List 3"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true" Name="List 4"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true" Name="List 5"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true" Name="List Bullet 2"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true" Name="List Bullet 3"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true" Name="List Bullet 4"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true" Name="List Bullet 5"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true" Name="List Number 2"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true" Name="List Number 3"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true" Name="List Number 4"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true" Name="List Number 5"/>
  <w:LsdException Locked="false" Priority="10" QFormat="true" Name="Title"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true" Name="Closing"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true" Name="Signature"/>
  <w:LsdException Locked="false" Priority="1" SemiHidden="true" UnhideWhenUsed="true" Name="Default Paragraph Font"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true" Name="Body Text"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true" Name="Body Text Indent"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true" Name="List Continue"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true" Name="List Continue 2"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true" Name="List Continue 3"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true" Name="List Continue 4"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true" Name="List Continue 5"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true" Name="Message Header"/>
  <w:LsdException Locked="false" Priority="11" QFormat="true" Name="Subtitle"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true" Name="Salutation"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true" Name="Date"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true" Name="Body Text First Indent"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true" Name="Body Text First Indent 2"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true" Name="Note Heading"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true" Name="Body Text 2"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true" Name="Body Text 3"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true" Name="Body Text Indent 2"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true" Name="Body Text Indent 3"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true" Name="Block Text"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true" Name="Hyperlink"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true" Name="FollowedHyperlink"/>
  <w:LsdException Locked="false" Priority="22" QFormat="true" Name="Strong"/>
  <w:LsdException Locked="false" Priority="20" QFormat="true" Name="Emphasis"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true" Name="Document Map"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true" Name="Plain Text"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true" Name="E-mail Signature"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true" Name="HTML Top of Form"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true" Name="HTML Bottom of Form"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true" Name="Normal (Web)"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true" Name="HTML Acronym"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true" Name="HTML Address"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true" Name="HTML Cite"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true" Name="HTML Code"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true" Name="HTML Definition"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true" Name="HTML Keyboard"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true" Name="HTML Preformatted"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true" Name="HTML Sample"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true" Name="HTML Typewriter"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true" Name="HTML Variable"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true" Name="Normal Table"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true" Name="annotation subject"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true" Name="No List"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true" Name="Outline List 1"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true" Name="Outline List 2"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true" Name="Outline List 3"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true" Name="Table Simple 1"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true" Name="Table Simple 2"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true" Name="Table Simple 3"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true" Name="Table Classic 1"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true" Name="Table Classic 2"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true" Name="Table Classic 3"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true" Name="Table Classic 4"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true" Name="Table Colorful 1"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true" Name="Table Colorful 2"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true" Name="Table Colorful 3"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true" Name="Table Columns 1"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true" Name="Table Columns 2"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true" Name="Table Columns 3"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true" Name="Table Columns 4"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true" Name="Table Columns 5"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true" Name="Table Grid 1"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true" Name="Table Grid 2"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true" Name="Table Grid 3"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true" Name="Table Grid 4"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true" Name="Table Grid 5"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true" Name="Table Grid 6"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true" Name="Table Grid 7"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true" Name="Table Grid 8"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true" Name="Table List 1"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true" Name="Table List 2"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true" Name="Table List 3"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true" Name="Table List 4"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true" Name="Table List 5"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true" Name="Table List 6"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true" Name="Table List 7"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"  Name="Table List 8"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true" Name="Table 3D effects 1"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true" Name="Table 3D effects 2"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true" Name="Table 3D effects 3"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true" Name="Table Contemporary"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true" Name="Table Elegant"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true" Name="Table Professional"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true" Name="Table Subtle 1"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true" Name="Table Subtle 2"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true" Name="Table Web 1"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true" Name="Table Web 2"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true" Name="Table Web 3"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true" Name="Balloon Text"/>
  <w:LsdException Locked="false" Priority="39" Name="Table Grid"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true" Name="Table Theme"/>
  <w:LsdException Locked="false" SemiHidden="true" Name="Placeholder Text"/>
  <w:LsdException Locked="false" Priority="1" QFormat="true" Name="No Spacing"/>
  <w:LsdException Locked="false" Priority="60" Name="Light Shading"/>
  <w:LsdException Locked="false" Priority="61" Name="Light List"/>
  <w:LsdException Locked="false" Priority="62" Name="Light Grid"/>
  <w:LsdException Locked="false" Priority="63" Name="Medium Shading 1"/>
  <w:LsdException Locked="false" Priority="64" Name="Medium Shading 2"/>
  <w:LsdException Locked="false" Priority="65" Name="Medium List 1"/>
  <w:LsdException Locked="false" Priority="66" Name="Medium List 2"/>
  <w:LsdException Locked="false" Priority="67" Name="Medium Grid 1"/>
  <w:LsdException Locked="false" Priority="68" Name="Medium Grid 2"/>
  <w:LsdException Locked="false" Priority="69" Name="Medium Grid 3"/>
  <w:LsdException Locked="false" Priority="70" Name="Dark List"/>
  <w:LsdException Locked="false" Priority="71" Name="Colorful Shading"/>
  <w:LsdException Locked="false" Priority="72" Name="Colorful List"/>
  <w:LsdException Locked="false" Priority="73" Name="Colorful Grid"/>
  <w:LsdException Locked="false" Priority="60" Name="Light Shading Accent 1"/>
  <w:LsdException Locked="false" Priority="61" Name="Light List Accent 1"/>
  <w:LsdException Locked="false" Priority="62" Name="Light Grid Accent 1"/>
  <w:LsdException Locked="false" Priority="63" Name="Medium Shading 1 Accent 1"/>
  <w:LsdException Locked="false" Priority="64" Name="Medium Shading 2 Accent 1"/>
  <w:LsdException Locked="false" Priority="65" Name="Medium List 1 Accent 1"/>
  <w:LsdException Locked="false" SemiHidden="true" Name="Revision"/>
  <w:LsdException Locked="false" Priority="34" QFormat="true" Name="List Paragraph"/>
  <w:LsdException Locked="false" Priority="29" QFormat="true" Name="Quote"/>
  <w:LsdException Locked="false" Priority="30" QFormat="true" Name="Intense Quote"/>
  <w:LsdException Locked="false" Priority="66" Name="Medium List 2 Accent 1"/>
  <w:LsdException Locked="false" Priority="67" Name="Medium Grid 1 Accent 1"/>
  <w:LsdException Locked="false" Priority="68" Name="Medium Grid 2 Accent 1"/>
  <w:LsdException Locked="false" Priority="69" Name="Medium Grid 3 Accent 1"/>
  <w:LsdException Locked="false" Priority="70" Name="Dark List Accent 1"/>
  <w:LsdException Locked="false" Priority="71" Name="Colorful Shading Accent 1"/>
  <w:LsdException Locked="false" Priority="72" Name="Colorful List Accent 1"/>
  <w:LsdException Locked="false" Priority="73" Name="Colorful Grid Accent 1"/>
  <w:LsdException Locked="false" Priority="60" Name="Light Shading Accent 2"/>
  <w:LsdException Locked="false" Priority="61" Name="Light List Accent 2"/>
  <w:LsdException Locked="false" Priority="62" Name="Light Grid Accent 2"/>
  <w:LsdException Locked="false" Priority="63" Name="Medium Shading 1 Accent 2"/>
  <w:LsdException Locked="false" Priority="64" Name="Medium Shading 2 Accent 2"/>
  <w:LsdException Locked="false" Priority="65" Name="Medium List 1 Accent 2"/>
  <w:LsdException Locked="false" Priority="66" Name="Medium List 2 Accent 2"/>
  <w:LsdException Locked="false" Priority="67" Name="Medium Grid 1 Accent 2"/>
  <w:LsdException Locked="false" Priority="68" Name="Medium Grid 2 Accent 2"/>
  <w:LsdException Locked="false" Priority="69" Name="Medium Grid 3 Accent 2"/>
  <w:LsdException Locked="false" Priority="70" Name="Dark List Accent 2"/>
  <w:LsdException Locked="false" Priority="71" Name="Colorful Shading Accent 2"/>
  <w:LsdException Locked="false" Priority="72" Name="Colorful List Accent 2"/>
  <w:LsdException Locked="false" Priority="73" Name="Colorful Grid Accent 2"/>
  <w:LsdException Locked="false" Priority="60" Name="Light Shading Accent 3"/>
  <w:LsdException Locked="false" Priority="61" Name="Light List Accent 3"/>
  <w:LsdException Locked="false" Priority="62" Name="Light Grid Accent 3"/>
  <w:LsdException Locked="false" Priority="63" Name="Medium Shading 1 Accent 3"/>
  <w:LsdException Locked="false" Priority="64" Name="Medium Shading 2 Accent 3"/>
  <w:LsdException Locked="false" Priority="65" Name="Medium List 1 Accent 3"/>
  <w:LsdException Locked="false" Priority="66" Name="Medium List 2 Accent 3"/>
  <w:LsdException Locked="false" Priority="67" Name="Medium Grid 1 Accent 3"/>
  <w:LsdException Locked="false" Priority="68" Name="Medium Grid 2 Accent 3"/>
  <w:LsdException Locked="false" Priority="69" Name="Medium Grid 3 Accent 3"/>
  <w:LsdException Locked="false" Priority="70" Name="Dark List Accent 3"/>
  <w:LsdException Locked="false" Priority="71" Name="Colorful Shading Accent 3"/>
  <w:LsdException Locked="false" Priority="72" Name="Colorful List Accent 3"/>
  <w:LsdException Locked="false" Priority="73" Name="Colorful Grid Accent 3"/>
  <w:LsdException Locked="false" Priority="60" Name="Light Shading Accent 4"/>
  <w:LsdException Locked="false" Priority="61" Name="Light List Accent 4"/>
  <w:LsdException Locked="false" Priority="62" Name="Light Grid Accent 4"/>
  <w:LsdException Locked="false" Priority="63" Name="Medium Shading 1 Accent 4"/>
  <w:LsdException Locked="false" Priority="64" Name="Medium Shading 2 Accent 4"/>
  <w:LsdException Locked="false" Priority="65" Name="Medium List 1 Accent 4"/>
  <w:LsdException Locked="false" Priority="66" Name="Medium List 2 Accent 4"/>
  <w:LsdException Locked="false" Priority="67" Name="Medium Grid 1 Accent 4"/>
  <w:LsdException Locked="false" Priority="68" Name="Medium Grid 2 Accent 4"/>
  <w:LsdException Locked="false" Priority="69" Name="Medium Grid 3 Accent 4"/>
  <w:LsdException Locked="false" Priority="70" Name="Dark List Accent 4"/>
  <w:LsdException Locked="false" Priority="71" Name="Colorful Shading Accent 4"/>
  <w:LsdException Locked="false" Priority="72" Name="Colorful List Accent 4"/>
  <w:LsdException Locked="false" Priority="73" Name="Colorful Grid Accent 4"/>
  <w:LsdException Locked="false" Priority="60" Name="Light Shading Accent 5"/>
  <w:LsdException Locked="false" Priority="61" Name="Light List Accent 5"/>
  <w:LsdException Locked="false" Priority="62" Name="Light Grid Accent 5"/>
  <w:LsdException Locked="false" Priority="63" Name="Medium Shading 1 Accent 5"/>
  <w:LsdException Locked="false" Priority="64" Name="Medium Shading 2 Accent 5"/>
  <w:LsdException Locked="false" Priority="65" Name="Medium List 1 Accent 5"/>
  <w:LsdException Locked="false" Priority="66" Name="Medium List 2 Accent 5"/>
  <w:LsdException Locked="false" Priority="67" Name="Medium Grid 1 Accent 5"/>
  <w:LsdException Locked="false" Priority="68" Name="Medium Grid 2 Accent 5"/>
  <w:LsdException Locked="false" Priority="69" Name="Medium Grid 3 Accent 5"/>
  <w:LsdException Locked="false" Priority="70" Name="Dark List Accent 5"/>
  <w:LsdException Locked="false" Priority="71" Name="Colorful Shading Accent 5"/>
  <w:LsdException Locked="false" Priority="72" Name="Colorful List Accent 5"/>
  <w:LsdException Locked="false" Priority="73" Name="Colorful Grid Accent 5"/>
  <w:LsdException Locked="false" Priority="60" Name="Light Shading Accent 6"/>
  <w:LsdException Locked="false" Priority="61" Name="Light List Accent 6"/>
  <w:LsdException Locked="false" Priority="62" Name="Light Grid Accent 6"/>
  <w:LsdException Locked="false" Priority="63" Name="Medium Shading 1 Accent 6"/>
  <w:LsdException Locked="false" Priority="64" Name="Medium Shading 2 Accent 6"/>
  <w:LsdException Locked="false" Priority="65" Name="Medium List 1 Accent 6"/>
  <w:LsdException Locked="false" Priority="66" Name="Medium List 2 Accent 6"/>
  <w:LsdException Locked="false" Priority="67" Name="Medium Grid 1 Accent 6"/>
  <w:LsdException Locked="false" Priority="68" Name="Medium Grid 2 Accent 6"/>
  <w:LsdException Locked="false" Priority="69" Name="Medium Grid 3 Accent 6"/>
  <w:LsdException Locked="false" Priority="70" Name="Dark List Accent 6"/>
  <w:LsdException Locked="false" Priority="71" Name="Colorful Shading Accent 6"/>
  <w:LsdException Locked="false" Priority="72" Name="Colorful List Accent 6"/>
  <w:LsdException Locked="false" Priority="73" Name="Colorful Grid Accent 6"/>
  <w:LsdException Locked="false" Priority="19" QFormat="true" Name="Subtle Emphasis"/>
  <w:LsdException Locked="false" Priority="21" QFormat="true" Name="Intense Emphasis"/>
  <w:LsdException Locked="false" Priority="31" QFormat="true" Name="Subtle Reference"/>
  <w:LsdException Locked="false" Priority="32" QFormat="true" Name="Intense Reference"/>
  <w:LsdException Locked="false" Priority="33" QFormat="true" Name="Book Title"/>
  <w:LsdException Locked="false" Priority="37" SemiHidden="true" UnhideWhenUsed="true" Name="Bibliography"/>
  <w:LsdException Locked="false" Priority="39" SemiHidden="true" UnhideWhenUsed="true" QFormat="true" Name="TOC Heading"/>
  <w:LsdException Locked="false" Priority="41" Name="Plain Table 1"/>
  <w:LsdException Locked="false" Priority="42" Name="Plain Table 2"/>
  <w:LsdException Locked="false" Priority="43" Name="Plain Table 3"/>
  <w:LsdException Locked="false" Priority="44" Name="Plain Table 4"/>
  <w:LsdException Locked="false" Priority="45" Name="Plain Table 5"/>
  <w:LsdException Locked="false" Priority="40" Name="Grid Table Light"/>
  <w:LsdException Locked="false" Priority="46" Name="Grid Table 1 Light"/>
  <w:LsdException Locked="false" Priority="47" Name="Grid Table 2"/>
  <w:LsdException Locked="false" Priority="48" Name="Grid Table 3"/>
  <w:LsdException Locked="false" Priority="49" Name="Grid Table 4"/>
  <w:LsdException Locked="false" Priority="50" Name="Grid Table 5 Dark"/>
  <w:LsdException Locked="false" Priority="51" Name="Grid Table 6 Colorful"/>
  <w:LsdException Locked="false" Priority="52" Name="Grid Table 7 Colorful"/>
  <w:LsdException Locked="false" Priority="46" Name="Grid Table 1 Light Accent 1"/>
  <w:LsdException Locked="false" Priority="47" Name="Grid Table 2 Accent 1"/>
  <w:LsdException Locked="false" Priority="48" Name="Grid Table 3 Accent 1"/>
  <w:LsdException Locked="false" Priority="49" Name="Grid Table 4 Accent 1"/>
  <w:LsdException Locked="false" Priority="50" Name="Grid Table 5 Dark Accent 1"/>
  <w:LsdException Locked="false" Priority="51" Name="Grid Table 6 Colorful Accent 1"/>
  <w:LsdException Locked="false" Priority="52" Name="Grid Table 7 Colorful Accent 1"/>
  <w:LsdException Locked="false" Priority="46" Name="Grid Table 1 Light Accent 2"/>
  <w:LsdException Locked="false" Priority="47" Name="Grid Table 2 Accent 2"/>
  <w:LsdException Locked="false" Priority="48" Name="Grid Table 3 Accent 2"/>
  <w:LsdException Locked="false" Priority="49" Name="Grid Table 4 Accent 2"/>
  <w:LsdException Locked="false" Priority="50" Name="Grid Table 5 Dark Accent 2"/>
  <w:LsdException Locked="false" Priority="51" Name="Grid Table 6 Colorful Accent 2"/>
  <w:LsdException Locked="false" Priority="52" Name="Grid Table 7 Colorful Accent 2"/>
  <w:LsdException Locked="false" Priority="46" Name="Grid Table 1 Light Accent 3"/>
  <w:LsdException Locked="false" Priority="47" Name="Grid Table 2 Accent 3"/>
  <w:LsdException Locked="false" Priority="48" Name="Grid Table 3 Accent 3"/>
  <w:LsdException Locked="false" Priority="49" Name="Grid Table 4 Accent 3"/>
  <w:LsdException Locked="false" Priority="50" Name="Grid Table 5 Dark Accent 3"/>
  <w:LsdException Locked="false" Priority="51" Name="Grid Table 6 Colorful Accent 3"/>
  <w:LsdException Locked="false" Priority="52" Name="Grid Table 7 Colorful Accent 3"/>
  <w:LsdException Locked="false" Priority="46" Name="Grid Table 1 Light Accent 4"/>
  <w:LsdException Locked="false" Priority="47" Name="Grid Table 2 Accent 4"/>
  <w:LsdException Locked="false" Priority="48" Name="Grid Table 3 Accent 4"/>
  <w:LsdException Locked="false" Priority="49" Name="Grid Table 4 Accent 4"/>
  <w:LsdException Locked="false" Priority="50" Name="Grid Table 5 Dark Accent 4"/>
  <w:LsdException Locked="false" Priority="51" Name="Grid Table 6 Colorful Accent 4"/>
  <w:LsdException Locked="false" Priority="52" Name="Grid Table 7 Colorful Accent 4"/>
  <w:LsdException Locked="false" Priority="46" Name="Grid Table 1 Light Accent 5"/>
  <w:LsdException Locked="false" Priority="47" Name="Grid Table 2 Accent 5"/>
  <w:LsdException Locked="false" Priority="48" Name="Grid Table 3 Accent 5"/>
  <w:LsdException Locked="false" Priority="49" Name="Grid Table 4 Accent 5"/>
  <w:LsdException Locked="false" Priority="50" Name="Grid Table 5 Dark Accent 5"/>
  <w:LsdException Locked="false" Priority="51" Name="Grid Table 6 Colorful Accent 5"/>
  <w:LsdException Locked="false" Priority="52" Name="Grid Table 7 Colorful Accent 5"/>
  <w:LsdException Locked="false" Priority="46" Name="Grid Table 1 Light Accent 6"/>
  <w:LsdException Locked="false" Priority="47" Name="Grid Table 2 Accent 6"/>
  <w:LsdException Locked="false" Priority="48" Name="Grid Table 3 Accent 6"/>
  <w:LsdException Locked="false" Priority="49" Name="Grid Table 4 Accent 6"/>
  <w:LsdException Locked="false" Priority="50" Name="Grid Table 5 Dark Accent 6"/>
  <w:LsdException Locked="false" Priority="51" Name="Grid Table 6 Colorful Accent 6"/>
  <w:LsdException Locked="false" Priority="52" Name="Grid Table 7 Colorful Accent 6"/>
  <w:LsdException Locked="false" Priority="46" Name="List Table 1 Light"/>
  <w:LsdException Locked="false" Priority="47" Name="List Table 2"/>
  <w:LsdException Locked="false" Priority="48" Name="List Table 3"/>
  <w:LsdException Locked="false" Priority="49" Name="List Table 4"/>
  <w:LsdException Locked="false" Priority="50" Name="List Table 5 Dark"/>
  <w:LsdException Locked="false" Priority="51" Name="List Table 6 Colorful"/>
  <w:LsdException Locked="false" Priority="52" Name="List Table 7 Colorful"/>
  <w:LsdException Locked="false" Priority="46" Name="List Table 1 Light Accent 1"/>
  <w:LsdException Locked="false" Priority="47" Name="List Table 2 Accent 1"/>
  <w:LsdException Locked="false" Priority="48" Name="List Table 3 Accent 1"/>
  <w:LsdException Locked="false" Priority="49" Name="List Table 4 Accent 1"/>
  <w:LsdException Locked="false" Priority="50" Name="List Table 5 Dark Accent 1"/>
  <w:LsdException Locked="false" Priority="51" Name="List Table 6 Colorful Accent 1"/>
  <w:LsdException Locked="false" Priority="52" Name="List Table 7 Colorful Accent 1"/>
  <w:LsdException Locked="false" Priority="46" Name="List Table 1 Light Accent 2"/>
  <w:LsdException Locked="false" Priority="47" Name="List Table 2 Accent 2"/>
  <w:LsdException Locked="false" Priority="48" Name="List Table 3 Accent 2"/>
  <w:LsdException Locked="false" Priority="49" Name="List Table 4 Accent 2"/>
  <w:LsdException Locked="false" Priority="50" Name="List Table 5 Dark Accent 2"/>
  <w:LsdException Locked="false" Priority="51" Name="List Table 6 Colorful Accent 2"/>
  <w:LsdException Locked="false" Priority="52" Name="List Table 7 Colorful Accent 2"/>
  <w:LsdException Locked="false" Priority="46" Name="List Table 1 Light Accent 3"/>
  <w:LsdException Locked="false" Priority="47" Name="List Table 2 Accent 3"/>
  <w:LsdException Locked="false" Priority="48" Name="List Table 3 Accent 3"/>
  <w:LsdException Locked="false" Priority="49" Name="List Table 4 Accent 3"/>
  <w:LsdException Locked="false" Priority="50" Name="List Table 5 Dark Accent 3"/>
  <w:LsdException Locked="false" Priority="51" Name="List Table 6 Colorful Accent 3"/>
  <w:LsdException Locked="false" Priority="52" Name="List Table 7 Colorful Accent 3"/>
  <w:LsdException Locked="false" Priority="46" Name="List Table 1 Light Accent 4"/>
  <w:LsdException Locked="false" Priority="47" Name="List Table 2 Accent 4"/>
  <w:LsdException Locked="false" Priority="48" Name="List Table 3 Accent 4"/>
  <w:LsdException Locked="false" Priority="49" Name="List Table 4 Accent 4"/>
  <w:LsdException Locked="false" Priority="50" Name="List Table 5 Dark Accent 4"/>
  <w:LsdException Locked="false" Priority="51" Name="List Table 6 Colorful Accent 4"/>
  <w:LsdException Locked="false" Priority="52" Name="List Table 7 Colorful Accent 4"/>
  <w:LsdException Locked="false" Priority="46" Name="List Table 1 Light Accent 5"/>
  <w:LsdException Locked="false" Priority="47" Name="List Table 2 Accent 5"/>
  <w:LsdException Locked="false" Priority="48" Name="List Table 3 Accent 5"/>
  <w:LsdException Locked="false" Priority="49" Name="List Table 4 Accent 5"/>
  <w:LsdException Locked="false" Priority="50" Name="List Table 5 Dark Accent 5"/>
  <w:LsdException Locked="false" Priority="51" Name="List Table 6 Colorful Accent 5"/>
  <w:LsdException Locked="false" Priority="52" Name="List Table 7 Colorful Accent 5"/>
  <w:LsdException Locked="false" Priority="46" Name="List Table 1 Light Accent 6"/>
  <w:LsdException Locked="false" Priority="47" Name="List Table 2 Accent 6"/>
  <w:LsdException Locked="false" Priority="48" Name="List Table 3 Accent 6"/>
  <w:LsdException Locked="false" Priority="49" Name="List Table 4 Accent 6"/>
  <w:LsdException Locked="false" Priority="50" Name="List Table 5 Dark Accent 6"/>
  <w:LsdException Locked="false" Priority="51" Name="List Table 6 Colorful Accent 6"/>
  <w:LsdException Locked="false" Priority="52" Name="List Table 7 Colorful Accent 6"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true" Name="Mention"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true" Name="Smart Hyperlink"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true" Name="Hashtag"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true" Name="Unresolved Mention"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true" Name="Smart Link"/>
 </w:LatentStyles>
</xml><![endif]-->
#########################################################################################################################
##  WORD EMBEDDED CSS 
######################################################################################################################### 
<style>
<!--

/* Word Page Definitions                                  */
/* -------------------------------------------------------*/
@page WordSectionPortrait
  {size:12.0in 11.0in;
  margin:$pageMarginTB $pageMarginLR $pageMarginTB $pageMarginLR;
  mso-header-margin:.8in;
  mso-footer-margin:.5in;
  mso-header:pageHeader;
  mso-footer:pageFooter;}
div.WordSectionPortrait
  {page:WordSectionPortrait;}
@page WordSectionLandscape
  {size:11.0in 8.5in;
  mso-page-orientation:landscape;
  margin:$pageMarginTB $pageMarginLR $pageMarginTB $pageMarginLR;
  mso-header-margin:.5in;
  mso-footer-margin:.5in;
  mso-header:pageHeader;
  mso-footer:pageFooter;}
div.WordSectionLandscape
  {page:WordSectionLandscape;}

/* Word Font Definitions                                  */
/* -------------------------------------------------------*/
@font-face
  {font-family:Wingdings;
  panose-1:5 0 0 0 0 0 0 0 0 0;
  mso-font-charset:77;
  mso-generic-font-family:decorative;
  mso-font-pitch:variable;
  mso-font-signature:3 268435456 0 0 -2147483647 0;}
@font-face
  {font-family:"Cambria Math";
  panose-1:2 4 5 3 5 4 6 3 2 4;
  mso-font-charset:0;
  mso-generic-font-family:roman;
  mso-font-pitch:variable;
  mso-font-signature:-536869121 1107305727 33554432 0 415 0;}
@font-face
  {font-family:"Helvetica Neue";
  panose-1:2 0 5 3 0 0 0 2 0 4;
  mso-font-charset:0;
  mso-generic-font-family:auto;
  mso-font-pitch:variable;
  mso-font-signature:-452984065 1342208475 16 0 1 0;}
@font-face
  {font-family:"Calibri";
  panose-1:2 15 5 2 2 2 4 3 2 4;
  mso-font-charset:0;
  mso-generic-font-family:swiss;
  mso-font-pitch:variable;
  mso-font-signature:-1610611985 1073750139 0 0 159 0;}
@font-face
   {font-family:Aptos;
   mso-font-charset:0;
   mso-generic-font-family:swiss;
   mso-font-pitch:variable;
   mso-font-signature:536871559 3 0 0 415 0;}
@font-face
  {font-family:"Times New Roman \(Body CS\)";
  panose-1:2 11 6 4 2 2 2 2 2 4;
  mso-font-alt:"Times New Roman";
  mso-font-charset:0;
  mso-generic-font-family:roman;
  mso-font-pitch:auto;
  mso-font-signature:0 0 0 0 0 0;}
@font-face
  {font-family:"Open Sans";
  mso-font-charset:0;
  mso-generic-font-family:swiss;
  mso-font-pitch:variable;
  mso-font-signature:-536870161 1073750107 40 0 415 0;}


/* Word Style Class Definitions                           */
/* -------------------------------------------------------*/
body {
  font-family:"$primaryFont.family",$primaryFont.type;}

/* Word Primary Text Style Class     */
/* ----------------------------------*/
p, li, p.MsoNormal, li.MsoNormal, div.MsoNormal
  {mso-style-qformat:yes;
  margin-top:3.0pt;
  margin-right:0in;
  margin-bottom:3.0pt;
  margin-left:0in;
  font-family:"$primaryFont.family",$primaryFont.type;
  font-size:$typeScale.p;}
  

/* Word Sub/Sup Style Classes        */
/* ----------------------------------*/
sub, sup {font-size:8pt;}

/* Word List Style Classes           */
/* ----------------------------------*/
/* mso-list:none; utilize if ul or ol elements are listing when they should not*/
ol
  {margin:0pt;}
ul
  {margin:0pt;}
li
  {margin:0pt;}

/* Word Hyperlinks Style Classes     */
/* ----------------------------------*/
a:visited, span.MsoHyperlinkFollowed
  {color:#96607D;
  text-decoration:underline;
  text-underline:single;}
a:link, span.MsoHyperlink, span.CrossRefLink
  {color:#0563C1;
  text-decoration:underline;
  text-underline:single;}

/* Word Headings Style Classes       */
/* ----------------------------------*/
h1
  {mso-style-qformat:yes;
  margin:12pt 0pt 3pt .3in;
  text-indent:-.3in;
  page-break-after:avoid;
  mso-outline-level:1;
  mso-list:l0 level1 lfo1;
  font-family:"$primaryFont.family",$primaryFont.type;
  font-size:$typeScale.h1;
  color:${headingColor};
  mso-font-kerning:0pt;
  font-weight:bold;}
h2
  {mso-style-qformat:yes;
  margin:6pt 0pt 3pt .5in;
  text-indent:-.5in;
  page-break-after:avoid;
  mso-outline-level:2;
  mso-list:l0 level2 lfo1;
  font-size:$typeScale.h2;
  font-family:"$primaryFont.family",$primaryFont.type;
  color:${headingColor};
  font-weight:bold;}
h3
  {mso-style-qformat:yes;
  margin:6pt 0pt 3pt .6in;
  text-indent:-.6in;
  page-break-after:avoid;
  mso-outline-level:3;
  mso-list:l0 level3 lfo1;
  font-size:$typeScale.h3;
  font-family:"$primaryFont.family",$primaryFont.type;
  color:${headingColor};
  font-weight:bold;}
h4
  {mso-style-priority:9;
  mso-style-qformat:yes;
  margin:6pt 0pt 3pt .7in;
  text-indent:-.7in;
  page-break-after:avoid;
  mso-outline-level:4;
  mso-list:l0 level4 lfo1;
  font-size:$typeScale.h4;
  font-family:"$primaryFont.family",$primaryFont.type;
  color:${headingColor};
  font-weight:bold;}
h5
  {mso-style-qformat:yes;
  margin:6pt 0pt 3pt .8in;
  text-indent:-.8in;
  page-break-after:avoid;
  mso-outline-level:5;
  mso-list:l0 level5 lfo1;
  font-size:$typeScale.h5;
  font-family:"$primaryFont.family",$primaryFont.type;
  color:${headingColor};
  font-weight:bold;}
h6
  {mso-style-qformat:yes;
  margin:6pt 0pt 3pt 1in;
  text-indent:-1in;
  page-break-after:avoid;
  mso-outline-level:6;
  mso-list:l0 level6 lfo1;
  font-size:$typeScale.h6;
 font-family:"$primaryFont.family",$primaryFont.type;
  color:${headingColor};
  font-weight:bold;}
p.MsoHeading7, li.MsoHeading7, div.MsoHeading7
  {mso-style-qformat:yes;
  margin:6pt 0pt 3pt 1.1in;
  text-indent:-1.1in;
  page-break-after:avoid;
  mso-outline-level:7;
  mso-list:l0 level7 lfo1;
  font-size:$typeScale.h7;
  font-family:"$primaryFont.family",$primaryFont.type;
  color:${headingColor};
  font-weight:bold;}

/* Word TOC Heading Style Classes    */
/* ----------------------------------*/
p.MsoToc1, li.MsoToc1, div.MsoToc1
  {mso-style-update:auto;
  margin:6pt 0 3pt 0;
  font-size:$tocScale.toc1;
  font-family:"$primaryFont.family",$primaryFont.type;
  font-weight:bold;}
p.MsoToc2, li.MsoToc2, div.MsoToc2
  {mso-style-update:auto;
  margin:3pt 0 3pt 10.0pt;
   font-size:$tocScale.toc2;
   font-family:"$primaryFont.family",$primaryFont.type;}
p.MsoToc3, li.MsoToc3, div.MsoToc3
  {mso-style-update:auto;
  margin:3pt 0 3pt 20.0pt;
  font-size:$tocScale.toc3;
   font-family:"$primaryFont.family",$primaryFont.type;}
p.MsoToc4, li.MsoToc4, div.MsoToc4
  {mso-style-update:auto;
   margin:3pt 0 3pt 30.0pt;
  font-size:$tocScale.toc4;
  font-family:"$primaryFont.family",$primaryFont.type;}
p.MsoToc5, li.MsoToc5, div.MsoToc5
  {mso-style-update:auto;
   margin:3pt 0 3pt 40.0pt;
  font-size:$tocScale.toc5;
   font-family:"$primaryFont.family",$primaryFont.type;}
p.MsoToc6, li.MsoToc6, div.MsoToc6
  {mso-style-update:auto;
   margin:3pt 0 3pt 50.0pt;
  font-size:$tocScale.toc6;
 font-family:"$primaryFont.family",$primaryFont.type;}
p.MsoToc7, li.MsoToc7, div.MsoToc7
  {mso-style-update:auto;
   margin:3pt 0 3pt 60.0pt;
  font-size:$tocScale.toc7;
  font-family:"$primaryFont.family",$primaryFont.type;}
p.MsoTocHeading, li.MsoTocHeading, div.MsoTocHeading
   { mso-style-qformat:yes;
   mso-style-parent:"Heading 1";
   mso-style-next:Normal;
   margin:12.0pt 0pt 0pt 0pt;
   text-align:left;
   line-height:107%;
   page-break-after:avoid;
   font-size:$tocScale.tocHeading;
   font-family:"$primaryFont.family",$primaryFont.type;
   font-variant:small-caps;
   font-weight:bold !important;}

/* Word Title/Subtitle Style Classes */
/* ----------------------------------*/
p.MsoTitle, li.MsoTitle, div.MsoTitle
  {mso-style-qformat:yes;
  mso-style-link:"Title Char";
  mso-style-next:Normal;
  margin:3.0pt 0pt 4pt 0pt;
  color:${headingColor};
  font-size:$typeScale.title;
  font-family:"$primaryFont.family",$primaryFont.type;}
p.MsoSubtitle, li.MsoSubtitle, div.MsoSubtitle
  {mso-style-qformat:yes;
  mso-style-link:"Subtitle Char";
  mso-style-next:Normal;
  margin:3.0pt 0pt 3pt 0pt;
  font-size:$typeScale.subTitle;
   font-family:"$primaryFont.family",$primaryFont.type;
  color:#595959;
  letter-spacing:.75pt;}

/* Word Header/Footer Style Classes  */
/* ----------------------------------*/
p.MsoHeader, li.MsoHeader, div.MsoHeader
  {mso-style-qformat:yes;
  margin:0pt;
  font-size:$typeScale.header;
  font-family:"$primaryFont.family",$primaryFont.type;}
p.MsoFooter, li.MsoFooter, div.MsoFooter
  {mso-style-qformat:yes;
  margin:0pt;
  font-size:$typeScale.footer;
  font-family:"$primaryFont.family",$primaryFont.type;}

/* Word Caption Style Classes        */
/* ----------------------------------*/
p.MsoCaption, li.MsoCaption, div.MsoCaption,span.MsoCaption
 {font-size:8.0pt !important;
  color:${headingColor};
  font-weight:bold !important;
  font-family:'Helvetica',sans-serif !important;
  page-break-inside:avoid !important;
  margin:0;}

/* Word Table Style Classes          */
/* ----------------------------------*/
table
  {margin-top:2pt;
  margin-bottom: 1pt;
  border-collapse: collapse;
  table-layout: fixed;
  mso-tstyle-rowband-size:0;
  mso-tstyle-colband-size:0;
  padding:2pt 3pt 2pt 3pt;
  border:.5pt solid $tableBorderColor;
  font-size:$typeScale.tableCell;
  font-family:"$primaryFont.family",$primaryFont.type;}
table.MsoNormalTable
  {mso-style-name:"Table Normal";
  mso-style-parent:"";}
table.MsoTableGrid
  {mso-style-name:"Table Grid";
  mso-style-unhide:no;}
table.TableGridwithHeader
  {border:none;
  mso-style-name:"Table Grid with Header";
  mso-style-parent:"Table Grid";}
table.headerTable
  {mso-style-name:"Table Grid";
  mso-style-unhide:no;
  width: 100% !important;
  table-layout: auto !important;
  padding: 0 !important;
  margin: 0 0 12pt 0 !important;
  mso-tstyle-rowband-size:0 !important;
  mso-tstyle-colband-size:0 !important;
  font-size:$typeScale.tableCell !important;
  font-family:"$primaryFont.family",$primaryFont.type !important;
  border:.5pt solid $tableBorderColor !important;
  border-collapse: collapse !important;}
th, td:not(.HeaderTableCell)
  {padding: 5pt 2pt;
  text-align:left;
  overflow-wrap:break-word; /*normal | anywhere | break-word | initial | inherit */ 
  word-break:break-word;
  white-space:normal !important; 
  font-size:$typeScale.tableCell;}
th
  {background:$tableHeaderBgColor;}
th.TableHeader
  {border:solid $tableBorderColor .5pt;}
p.TableHeader, li.TableHeader, div.TableHeader
  {mso-style-name:"Table Header";
  mso-style-qformat:yes;
  
  margin:0pt;
  font-weight:bold;}
td.TableCell
  {border:solid $tableBorderColor .5pt;}
td.HeaderTableCell
  {border:solid $tableBorderColor .5pt;
  overflow-wrap:break-word; /*normal | anywhere | break-word | initial | inherit */ 
  word-break:break-word;
  white-space:normal !important;
  padding: 1pt 0 1pt 0;}
td, p.TableCell, li.TableCell, div.TableCell
  {mso-style-name:"Table Cell";
  mso-style-qformat:yes;
  margin:0pt;
  font-size:$typeScale.TableCell;}
td.emphasis
  {text-color:"#204A7E";}

/* Word Table of... List Definitions                      */
/* -------------------------------------------------------*/
@list l0
  {mso-list-id:1764108000;
  mso-list-template-ids:1094757160;}
@list l0:level1
  {mso-level-style-link:"Heading 1";
  mso-level-text:%1;
  mso-level-tab-stop:none;
  mso-level-number-position:left;
  margin-left:.3in;
  text-indent:-.3in;}
@list l0:level2
  {mso-level-style-link:"Heading 2";
  mso-level-text:"%1\.%2";
  mso-level-tab-stop:none;
  mso-level-number-position:left;
  margin-left:.4in;
  text-indent:-.4in;}
@list l0:level3
  {mso-level-style-link:"Heading 3";
  mso-level-text:"%1\.%2\.%3";
  mso-level-tab-stop:none;
  mso-level-number-position:left;
  margin-left:.5in;
  text-indent:-.5in;}
@list l0:level4
  {mso-level-style-link:"Heading 4";
  mso-level-text:"%1\.%2\.%3\.%4";
  mso-level-tab-stop:none;
  mso-level-number-position:left;
  margin-left:.6in;
  text-indent:-.6in;}
@list l0:level5
  {mso-level-style-link:"Heading 5";
  mso-level-text:"%1\.%2\.%3\.%4\.%5";
  mso-level-tab-stop:none;
  mso-level-number-position:left;
  margin-left:.7in;
  text-indent:-.7in;}
@list l0:level6
  {mso-level-style-link:"Heading 6";
  mso-level-text:"%1\.%2\.%3\.%4\.%5\.%6";
  mso-level-tab-stop:none;
  mso-level-number-position:left;
  margin-left:.8in;
  text-indent:-.8in;}
@list l0:level7
  {mso-level-style-link:"Heading 7";
  mso-level-text:"%1\.%2\.%3\.%4\.%5\.%6\.%7";
  mso-level-tab-stop:none;
  mso-level-number-position:left;
  margin-left:.9in;
  text-indent:-.9in;}
@list l0:level8
  {mso-level-style-link:"Heading 8";
  mso-level-text:"%1\.%2\.%3\.%4\.%5\.%6\.%7\.%8";
  mso-level-tab-stop:none;
  mso-level-number-position:left;
  margin-left:1.0in;
  text-indent:-1.0in;}
@list l0:level9
  {mso-level-style-link:"Heading 9";
  mso-level-text:"%1\.%2\.%3\.%4\.%5\.%6\.%7\.%8\.%9";
  mso-level-tab-stop:none;
  mso-level-number-position:left;
  margin-left:1.1in;
  text-indent:-1.1in;}
-->
</style>
<!--[if gte mso 9]><xml>
 <o:shapedefaults v:ext="edit" spidmax="1026"/>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <o:shapelayout v:ext="edit">
  <o:idmap v:ext="edit" data="1"/>
 </o:shapelayout></xml><![endif]-->

</head>
#######################################################################################################################                                              
################################                 TEMPLATE MACROS                    ###################################
#######################################################################################################################
                              ########################################################
                              ##                 RICH TEXT MACROS                   ##
                              ########################################################
#######################################################################################################################
##          Macro: formatRichText
##          Input: $inString - input string
##          Return: $string, ready for opening in Word
#######################################################################################################################
#macro( formatRichText $inString )
  #if( $inString )
    #set( $string = $inString.toString() )
    ## Re-format text for consistent look and feel
    #set( $string = "#formatText($string)" )
    ## First re-format tables for consistent look and feel and fixed column widths
    #set( $string = "#formatTables($string, $maxPageWidth, 'left')" )
    ## Then prep figures to base64 after formatting tables
    #set( $string = "#convertFigures($string, $maxPageWidth)" )
    ## Convert hyperlinks in Jama Connect to Word cross-references if Master Template global variable is true
    #if($includeCrossReferences)
      #set( $string = "#convertHyperlinks($string)" )
    #end
    ## format lists appropriately
    #set( $string = $string.replaceAll('<li>','<li class=MsoListParagraph>'))
    #set( $string = $string.replaceAll('<li\s([^c].*?)>','<li class=MsoListParagraph $1>'))
    ## Make sure all content that is not already in a paragraph with a class is in a paragraph with class Normal
    #if( !$string.contains("<p"))
      #set( $string = "<p class=MsoNormal>$string</p>" )
    #else
      #set( $string = $string.replaceAll("<p>","<p class=MsoNormal>") )
      #set( $string = $string.replaceAll("<p\s([^c].*?)>","<p class=MsoNormal $1>") )
    #end
    ###set( $debug = $string.replaceAll( "<", "<br>-"))
    ##Debug formatRichText string $debug<br><br>

    $string
  #end
#end
########################################################################################################################
##          Macro: formatTableCell
##          Input: $inString - input string
##                 $justification - string, justification to apply to output (left, right, center)
##                 $$maxImageWidth - number, maximum pixel width of image in the cell 
##          Output: $string, ready for opening in Word
########################################################################################################################
#macro( formatTableCell $inString $justification $maxImageWidth)
  #if( $inString && $justification && $maxImageWidth )
    #set( $string = $inString.toString() )
    ## Re-format text for consistent look and feel
    #set( $string = "#formatText($string)" )
    ## First re-format tables for consistent look and feel, and fixed column widths
    #set( $string = "#formatTables($string, $maxImageWidth, 'left')" )
    ## Then prep figures to base64 after formatting tables
    #set( $string = "#convertFigures($string, $maxImageWidth)" )
    ## Convert hyperlinks in Jama Connect to Word cross-references if Master Template global variable is true
    #if($includeCrossReferences)
      #set( $string = "#convertHyperlinks($string)" )
    #end
    ## format lists appropriately
    #set( $string = $string.replaceAll('<li>','<li class=TableCell>') )
    #set( $string = $string.replaceAll('<li\s([^c].*?)>','<li class=TableCell $1>') )
    ## Make sure all cells are contained in a paragraph with the appropriate style
    #if( !$string.contains("<p"))
      #set( $string = "<p class=TableCell style='text-align:$justification'>$string</p>" )
    #else
      #set( $string = $string.replaceAll("<p>","<p class=TableCell style='text-align:$justification'>") )
      #set( $string = $string.replaceAll("<p\s([^c].*?)>","<p class=TableCell $1 style='text-align:$justification'>") )
    #end
    ##set( $debug = $string.replaceAll( "<", "<br>-"))
    ###Debug formatTableCell string $debug<br><br>

    $string
  #end
#end
#####################################################################################################################
##          Macro: formatText
##          Input: $inString - input string
##          Return: $string, ready for opening in Word
#####################################################################################################################
#macro( formatText $inString )

  #set( $string = $inString )
  ## clear all span statements to remove character formatting
  #set( $string = $string.replaceAll("<span.*?>|<\/span>",""))
  ## clear all embedded headings from rich text fields
  #set( $string = $string.replaceAll("<h\d*?.*?>","<p><strong>"))
  #set( $string = $string.replaceAll("<\/h\d*?>","</strong></p>"))
  ## remove any empty image strings
  #set( $string = $string.replaceAll("<img alt=[\x27\x22][\x27\x22] />", ""))
  #set( $string = $string.replaceAll("<img\s?\/>",""))
  ## replace Micro aka Legacy Symbol to prevent overlapping characters
  #set( $string = $string.replaceAll("Âµsec", "&mu;sec"))
  #set( $string = $string.replaceAll("ï±", "&#9744;"))
  ## table edge cases 
  #set( $string = $string.replaceAll("(nowrap)(=)([\s*|\x27\x22|])?(nowrap)[\x27\x22]", ""))
  #set( $string = $string.replaceAll("(scope)(=)([\s*|\x27\x22|])?(col)[\x27\x22]",""))

  $string
#end
#######################################################################################################################
##          Macro: convertHyperlinks
##          Input: $inString - input string
##          Return: $string, ready for opening in Word
#######################################################################################################################
#macro( convertHyperlinks $inString )
  ## Reset variables used in the macro
  #set( $subs = [] )
  #set( $output = "" )
  #set( $destDoc = false )
  #set( $deleteNextSub = false )


  ## split the string by > to break it up into HTML tags
  #set ( $subs = $inString.split(">"))


  ## Parse each substring
  #foreach ($sub in $subs) 
    ## split removes the split character, so all subs are missing a > except for the last one

    #if( !$foreach.last) 
      #set( $sub = "${sub}>") 
    #end
    
    ## Hyperlinks are made up of two HTML tags.  If replacing a hyperlink was just replaced, delete the second part of it
    #if( !$deleteNextSub )
      ## only process strings that contain a docID and the current Jama base URL, indicating they are hyperlinks to a Jama item
      #if( $sub.contains("docId=") && $sub.contains($baseUrl) )
        ##Locate the doc ID in the string
        #set( $docIdStart = $sub.indexOf("docId=") + 6 )
        ## the doc ID might before or after the project ID, so check for & or " as the next character
        #set( $docIdEnd = $sub.indexOf( "&", $docIdStart))
        
        #if( $docIdEnd == -1 )
          #set( $docIdEnd = $sub.indexOf( '"', $docIdStart))
          ## if still -1 then our link is not stored in the report as a actual <a> link 
          ## most likely link text wrapped in a <p> tag (I.e user pasted link text to rich text box)
          #if( $docIdEnd == -1)
            #set( $docIdEnd = $sub.indexOf( "<", $docIdStart))
          #end
        #end

        ## Extract the doc ID from the string
        #set( $docId = $sub.substring( $docIdStart, $docIdEnd))
          ##<p class=MsoNorml>Debug: convertHyperlinks docId: $docId </p>
        ## Get the document corresponding to the docID
        #set ( $destDoc = $documentSource.getDocument( $mathTool.toInteger($docId) ))
          ##<p class=MsoNorml>Debug: convertHyperlinks destDoc: $destDoc.name </p>

        #if($baselineMode)
          #set($destReferencable = $referenceableDocIds.contains($destDoc.currentVersion.id)) ## Checks the origin document ID's of all export list items
        #else
          #set($destReferencable = $referenceableDocIds.contains($destDoc.id)) ## Checks only the export list ids
        #end

        ## Validate that the destination Doc was found
        #if ( $destDoc && $destReferencable )
          ## Replace the hyperlink with a Word cross-reference appropriate for the type of destination item
          #if( $format == "doc" )
            #set ($sub = $sub.replaceAll("(?s)<a.*?docId=.*?>", "<!--[if supportFields]><span style='mso-element:field-begin'></span>REF _API${docId} \\h <span style='mso-element:field-separator'></span><![endif]--><span class=CrossRefLink style='mso-no-proof:yes'>$destDoc.name</span><!--[if supportFields]><span style='mso-element:field-end'></span><![endif]-->") )
            #set( $deleteNextSub = true )
          #end
        #end


      #end ## #if( $sub.contains("docId=") && $sub.contains($baseUrl) )

      ## append the converted sub to the output string
      #set ( $output = "${output}${sub}" ) 

    #else
      #if( $sub.indexOf("</a>") > -1 )
        #set( $deleteNextSub = false )
      #end


    #end ## #if( !$deleteNextSub )

  #end ## #foreach ($sub in $subs)
  
  $output ## return the string with hyperlinks replaced with Word cross-references

#end
##
#########################################################################################################################
                              ########################################################
                              ##              RICH TEXT IMAGE MACROS                ##
                              ########################################################                        
#########################################################################################################################
##          Macro: convertFigures                                                                             
##          Input: $input - input string                      
##                 $maxImageWidth - number, max pixel width of images allowed                                     
##          Return: $output, string containing img/s replaced w/correct formatting                   
#########################################################################################################################
#macro( convertFigures $input $maxImageWidth )
  #set( $inTable = false )
  #set( $inFigure = false )
  #set( $figCapTagIndex = false)
  #set( $endfigCapTagIndex = false)
  #set( $inPTag = false )
  #set( $inDiv = false )
  #set( $textBefore = false ) 
  #set( $imgAlign = 'center') ## SET DEFAULT IMG ALIGNMENT
  #set( $figCapAlign = 'center') ## SET DEFAULT FIG CAPTION ALIGNMENT 
  #set( $figCaptionContent = '')

  ## Output string
  #set( $output = '')

  ## Process if there is at least one img in the string
  #if( $input.indexOf("<img") > -1 )
    #set( $imgSubs = $input.split("<"))
    
    ## Iterate on each substring
    #foreach($imgSub in $imgSubs) 
      #if( !$foreach.first && $imgSub.length() > 0) 
        #set( $imgSub = "<${imgSub}") 
      #end    
      ##set( $imgSub = $imgSub.replaceAll("\t|\n", ""))       

      ## Determine location in the field and format img considering
      ## ------------------------------------------------
      #if( $imgSub.contains("<table"))
        #set( $inTable = true ) 
      #elseif( $imgSub.contains("</table"))
        #set( $inTable = false )
      #elseif( $imgSub.contains("<p"))
        #set( $content = $imgSub.replaceAll("<p.*?>", ""))
        #if( $content.length() > 0 )
          #set( $textBefore = true )
        #else 
          #set( $textBefore = false )
        #end  
        #set( $inPTag = true )
      #elseif( $imgSub.contains("</p>"))
        #set( $inPTag = false )
      #elseif( $imgSub.contains("<div"))
        #set( $inDiv = true )
      #elseif( $imgSub.contains("</div"))
        #set( $inDiv = false )
      #elseif( $imgSub.contains("<figure"))

        ## Figcaption Content 
        ## ------------------
        
        #set( $inFigure = true )

        #set( $figCaptionTag = false) ## Identify opening <figcaption> tag
        #set( $figCapTagIndex = false)
        #foreach( $indexInc in [1..10])
          #set( $figCapCheckIndex = $foreach.parent.index + $indexInc)
          #if( $figCapCheckIndex < $imgSubs.size())
            #set( $figCapTagCheck = $imgSubs[$figCapCheckIndex])
            #if( $figCapTagCheck.contains("figcaption"))
              #set( $figCaptionTag = $figCapTagCheck)
              #set( $figCapTagIndex = $figCapCheckIndex - 1)
              #break
            #end
          #end
        #end

        #if( $figCaptionTag && $figCapTagIndex) ## Identify closing </figcaption> tag and extract caption content
          #set( $figCapCloseTag = false) 
          #foreach( $indexInc in [1..10])
            #set( $figCapCloseCheckIndex = $figCapTagIndex + $indexInc)
            #if( $figCapCloseCheckIndex < $imgSubs.size())
              #set( $figCapCloseTagCheck = $imgSubs[$figCapCloseCheckIndex])
              #set( $figCapCloseTagCheck = "<${figCapCloseTagCheck}")

              #if( $figCapCloseTagCheck.contains("</figcaption"))
                #set( $figCapCloseTag = $figCapCloseTagCheck)
                #set( $figCaptionContent = $figCaptionContent.replaceAll("<.*?>", ""))
                #set( $endfigCapTagIndex = $figCapCloseCheckIndex)
                #break
              #else
                #set( $figCaptionContent = $figCaptionContent + $figCapCloseTagCheck )
              #end
            #end
          #end
        #end ## #if( $figCaptionTag && $figCapTagIndex)

      #elseif( $imgSub.contains("</figure>"))
        #set( $inFigure = false )
        #set( $figCapTagIndex = false)
        #set( $endfigCapTagIndex = false)
      #end ## #if( $imgSub.contains("<table"))

      ## Image Alignment 
      ## ------------------------------------------------
      #if( $inFigure || $inPTag || $inDiv)
        #if( $imgSub.contains("align"))
          #set( $imgAlign = $imgSub.replaceAll("(?s).*(text-align|float|align).*?(\w+).*", "$2"))
        #end 
      #end 

      ## Clear tags that will be reformatted 
      ## ------------------------------------------------
      #if( $imgSub.contains("<figcaption")) 
        #set( $imgSub = $imgSub.replaceAll("(?s).*", ""))
      #elseif( $imgSub.contains("<figure")|| $imgSub.contains("</figure")|| $imgSub.contains("</figcaption") || $imgSub.contains("<div") || $imgSub.contains("<\/div"))
        #set( $imgSub = $imgSub.replaceAll("<figure.*?>|<\/figure>|<\/figcaption>|<div.*?>|<\/div>", ""))
      #end  

      ## Image   
      ## ------------------------------------------------
      #if( $imgSub.contains("img"))
        #set( $imgPlaceHolder = false )
        #getImgDimensions( $imgSub $maxImageWidth ) ## returns targetWidth, targetHeight

         #if( $inTable )
          #if( $height && $width ) ## Keep source height and width: this image has been resized in #formatTables according to table cell width ##
            #set( $targetWidth = $width )
            #set( $targetHeight = $height )
          #end 
        #end 

        #if( $imgSub.indexOf('src="') > -1 )
          #set($srcStartIndex = $imgSub.indexOf('src="') + 5)
          #set( $quoteChar = '"')
        #elseif($imgSub.indexOf("src='") > -1)
          #set($srcStartIndex = $imgSub.indexOf("src='") + 5)
          #set( $quoteChar = "'")
        #else
          #set($srcStartIndex = false )
        #end

        #if( $srcStartIndex )
          #set($remainingString = $imgSub.substring($srcStartIndex))
          #set($srcEndIndex = $remainingString.indexOf($quoteChar))
          #set($imgSrc = $remainingString.substring(0, $srcEndIndex))
        #else
          #set($imgSrc = false )
          #set( $imgPlaceHolder = true)
        #end
        
        #if( $imgSrc )
          #set( $imgSrc = $imgSrc.replaceAll("\?dpi.*$", ""))

          #if($imgSrc.indexOf($baseUrl) > -1 && $imgSrc.indexOf("blob:http") == -1 )
            #set( $dataURI_base64 = false )
            #buildBase64ImgContent( $imgSrc $dataURI_base64) ## returns cid, imageData

          #elseif($imgSrc.contains("base64") )
            #set( $dataURI_base64 = true )
            #buildBase64ImgContent( $imgSrc $dataURI_base64) 

          #else 
            #set( $imgPlaceHolder = true )
          #end
        #end 

          
        ## Word Image Replace
        ## ------------------------------------------------

        #if( $format == 'doc' && !$imgPlaceHolder && $targetWidth && $targetHeight && $cid )
       
          ## set imgForReplace for all imgs (note: .doc attachment svg images need the replacement to be a v:shape)
          #set( $imgForReplace = "<!--[if gte vml 1]><v:shape style='width:${targetWidth}px;height:${targetHeight}px;visibility:visible;mso-wrap-style:square'>
            <v:imagedata src='cid:$cid' o:title='$cid'/></v:shape><![endif]-->")
          ## other image formats can utilize a img tag but if using key command to update toc the imgs can disappear
          ##set( $imgForReplace = "<img width=$!targetWidth height=$!targetHeight src='cid:$!cid'/>")
     
          #if( $imgSub.contains("equation"))
            #formatEquation_DOC( $imgForReplace $inPTag $textBefore)
          #else
            #formatImgWithOptionForCaptions_DOC( $imgForReplace $imgAlign $figCapAlign $figCaptionContent )
          #end 

        #elseif( $imgPlaceHolder )
          #set( $replace = "[Placeholder: IMAGE]")
        #end

        ## if this image is wrapped with text ensure the text closes and reopens around the image so 
        ## that font styles are maintained
        #if( $inPTag && $textBefore && !$imgSub.contains("equation"))
          #set( $replace = $replace + "<p class=MsoNormal>")
        #end 

        #set( $imgSub = $imgSub.replaceAll("(?s)<img.*?>", $replace ))
        ###set( $replace = $replace.replaceAll( "<", "<br>-"))
        ###Debug Img Replace $replace<br><br>
        ##
        ## ****************************************<br>
        ##  <p class=MsoNormal>DEBUG IMG for $format format </p> 
        ##<p class=MsoNormal>TargetWidth: $targetWidth</p>
        ##<p class=MsoNormal>TargetHeight: $targetHeight </p>
        ##<p class=MsoNormal>Cid(.doc): $cid </p>
        ## <p class=MsoNormal>Fig Cap Content: $figCaptionContent</p>
        ## <p class=MsoNormal>Img Align: $imgAlign</p>
        ## <p class=MsoNormal>Fig Cap Align: $figCapAlign</p>
        ## <p class=MsoNormal>Image Src: #if( !$dataURI_base64) $imgSrc 
        ## #else base64 Data URI char length $imgSrc.length() #end </p>
        ##  <p class=MsoNormal>ImageData(.pdf): $imageData.length()</p>
        ##  *****************************************<br>
        ## 
      #end  ## #if( $imgSub.contains("img"))

      ## In the event that the <figcaption content has styling tags applied then ensure this content is not included in final output
        ## No captions for figure found, apply content
      #if(!$figCapTagIndex && !$endfigCapTagIndex)
        #set( $output = "${output}${imgSub}" ) 
        ## Caption found, apply content only if not within caption range
      #elseif( $foreach.index <= $figCapTagIndex || $foreach.index > $endfigCapTagIndex)  
        #set( $output = "${output}${imgSub}" ) 
      #end

    #end ## #foreach($sub in $imgSubs) 

  #else 
    #set( $output = $input)
  #end ## #if( $input.indexOf("<img") > -1 )
             
  $output ##  Return String    


#end
##
#################################################################################################
########    WORD IMAGE REPLACE MACROS ( SUB MACROS OF #convertFigures )                        ##
########    RETURN: $replace, img formatted for proper replacement                             ## 
#################################################################################################
##---------------------------------------------------------------------------------------------##
##  formatEquation_DOC - formats equation 
##---------------------------------------------------------------------------------------------## 
#macro( formatEquation_DOC $imgForReplace $inPTag )
  #set( $tableWidth = $targetWidth +50)
  #set( $equationRefNum = $equationRefNum +1) 
  #if( $inPTag && $textBefore ) ## if inline with a ptag and text preceeds the equation push the equation down lower ##
      #set( $textRaise = "-15pt") ## so that its inline with text, this number can be customized considering the size of the equation ##
  #else 
      #set( $textRaise = "0pt")
  #end 
  #set( $replace = "<span style='mso-no-proof:yes;position:relative;mso-text-raise:$!textRaise;'>$!imgForReplace</span>")

  #if($TOE_includeAllEquations)
      #set($replace = $replace + "<span class=MsoCaption style='text-align:left;mso-text-raise:$!textRaise;'>eq. $!equationRefNum</span> ")
  #end
#end
##
##---------------------------------------------------------------------------------------------##
##  formatImgWithOptionForCaptions_DOC - img is not in fig tags w/ figcaptions, 
##                                       option to format img with captions and include in the TOF 
##---------------------------------------------------------------------------------------------## 
#macro( formatImgWithOptionForCaptions_DOC $imgForReplace $imgAlign $figCapAlign $figCaptionContent)
    #if( $TOF_includeAllFigures || $figCaptionContent.length() > 0 ) ## Add Figcaptions to All Images and Include in the TOF ##  
      #set( $figureRefNum = $figureRefNum + 1)
      #set( $tableWidth = $targetWidth + 2)
      #set( $replace = "<p class=MsoNormal style='text-align:$!imgAlign'>
          <table width=$!tableWidth border=0 style='border-collapse:collapse;border:none;margin:0;table-layout:fixed;'>
              <tr>
                  <td>
                      $!imgForReplace
                  </td>
              </tr>
              <tr>
                  <td width=$!tableWidth>
                      <p class=MsoCaption style='margin-top:-10pt;text-align:$!figCapAlign'>
                        #if( $tableOfFigures || $TOF_includeFigCaptionPrefix )
                          <a name='_FIG${figureRefNum}'>Figure </a><!--[if supportFields]><span style='mso-bookmark:_FIG${figureRefNum}'></span><span style='mso-element:field-begin'></span><span style='mso-bookmark:_FIG${figureRefNum}'>SEQ Figure \\* ARABIC <span style='mso-element:field-separator'></span></span><![endif]--><span style='mso-bookmark:_FIG${figureRefNum}'><span style='mso-no-proof:yes'>$!figureRefNum</span></span><!--[if supportFields]><span style='mso-bookmark:_FIG${figureRefNum}'></span><span style='mso-element:field-end'></span><![endif]--><span style='mso-bookmark:_FIG${figureRefNum}'></span> 
                        #end 
                      $!figCaptionContent</p>
                  </td>
              </tr>
          </table></p>" )
      #set( $figCaptionContent = '') ## clear the figCaptionContent for next figure 
    #else ## No Extra Figcaptions No Inclusion in TOF ## 
        #set( $replace = "<p class=MsoNormal style='text-align:$!imgAlign'>$imgForReplace</p>" )
    #end 
#end
#######################################################################################################################
##         Macro: buildBase64ImgContent   
##         Input: $imgSrc - string of img src value                                                           
##         Return: $cid, - string, a file identifier that references a content location for .doc exports
##            $fileList, each image is formatted as an xml file reference and added to list. 
##            $figureList, each image is formatted with base64 definition and content location, and added to this list. 
##            $imageData, each image is formatted as a base64 dataURI
#######################################################################################################################
#macro( buildBase64ImgContent $imgSrc $dataURI_base64 )   
  #set( $imgID = false )
  #set( $fileExt = false )
  #set( $base64Fig = false )
  #set( $imageData = "")
 
  #if( !$dataURI_base64 )
    ## Get the image id 
    ## -------------------------------
    #if( $imgSrc.contains("attachment/"))
      #set( $imgID = $imgSrc.replaceAll("(?s).*\battachment\/(\d+)\/.*", "$1"))
    #elseif( $imgSrc.contains("diagram/"))
      #set( $imgID = $imgSrc.replaceAll("(?s).*\bdiagram\/(\d+)\/.*", "$1"))
    #else 
      #set( $imgPlaceHolder = true )
    #end 

    #set( $imgID = $imgID.trim())
    ##Debug ImgID: $imgID<br>
    #if( $imgID )
      ## Get the file extension 
      ## -------------------------------
      #set( $fileExt = $imgSrc.replaceAll( "(?s).*\.(\w+)$", "$1"))

      ## Get the base64 
      ## ------------------------------- 
      #if( $documentSource.getBase64Image($mathTool.toInteger($imgID)))
        #set( $base64Fig = $documentSource.getBase64Image( $mathTool.toInteger($imgID)))
        #set( $base64Fig = $base64Fig.trim())
      #else 
        #set( $imgPlaceHolder = true )
      #end 
    #else 
      #set( $imgPlaceHolder = true )
    #end
    ##Debug base64 character length: $base64Fig.length()<br>

  #elseif( $dataURI_base64 )
    #set( $dataURI_base64_count = $dataURI_base64_count + 1 )
    #if( $imgSrc.indexOf(";") > -1 )
      #set( $getFileInfo = $imgSrc.split(";"))

      ## Get the file extension 
      ## -------------------------------
      #set( $fileExt = $getFileInfo[0])
      #set( $fileExt = $fileExt.replaceAll(".*?\/(.*)", "$1"))

      ## Get the base64 
      ## ------------------------------- 
      #set( $base64Fig = $getFileInfo[1])
      #set( $base64Fig = $base64Fig.replaceAll("\/>|base64,", ""))

    #else 
      #set( $imgPlaceHolder = true )
    #end 


  #end ##if( !$dataURI_base64 )

  #if( !$imgPlaceHolder )
    #set( $contentType =  "Content-Type:image/" + $fileExt )
    #if( $dataURI_base64 )
      #set( $cid = "JAMA_IMG_BASE64" + $dataURI_base64_count + "." + $fileExt )
    #else 
      #set( $cid = "JAMA_IMG_" + $imgID + "." + $fileExt )
    #end 
    #set( $contentId = "Content-ID: " + $cid  )

    ## Add base64 content block to figureList which outputs at base of template  
    #if( $figureList.add($boundaryString)) #end
    #if( $figureList.add($contentId)) #end
    #if( $figureList.add("Content-Transfer-Encoding: base64")) #end
    #if( $figureList.add($contentType)) #end
    #if( $figureList.add("")) #end
    #if( $figureList.add($base64Fig)) #end
    #if( $figureList.add("")) #end

    ## Add xml file to fileList which outputs at base of template
    #set( $file = '<o:File HRef="' + $cid + '"/>')
    #if( $fileList.add( $file)) #end
  #end ## #if( !$imgPlaceHolder )

#end
#######################################################################################################################
##      Macro: getImgDimensions 
##      Input: $inputImage -string, substring img element 
##             $maxImageWidth- number, the value will be the page width if the initial macro called was #formatRichText 
##                             else the value will be a user set value provided to the #formatTableCell macro
##      Output: $targetWidth and $targetHeight - number, pixel dimensions of image 
#######################################################################################################################
#macro( getImgDimensions $inputImage $maxImageWidth )
  #set( $width = false )
  #set( $height = false )
  #set( $targetWidth = false )
  #set( $targetHeight = false )
  #set( $aspectRatio = 1.5 )

  #if( $maxImageWidth < $maxPageWidth )
    #set( $maxImgWidth = $maxImageWidth )
  #else 
    #set( $maxImgWidth = $maxPageWidth )
  #end 
  ## InputMaxImageWidth: $maxImageWidth, MaxPageWidth $maxPageWidth, 
  ## MaxPageHeight $maxPageHeight, Final MaxImgWidth: $maxImgWidth<br>

  ## Determine the size of the image from the source rich text html 
  #if( $inputImage.contains("height") && $inputImage.contains("width"))
    #set( $height = $inputImage.replaceAll('(?s).*\bheight.*?(\d+).*','$1'))
    #set( $height = $mathTool.toDouble( $height.trim() ))
    #set( $width = $inputImage.replaceAll('(?s).*\bwidth.*?(\d+).*','$1'))
    #set( $width = $mathTool.toDouble( $width.trim() ))
    ##1. Debug w x h, $width x $height <br>
  #end

  #if( $height && $width )
    #set( $aspectRatio = $width / $height ) 

    ## if the image is taller than allowed, resize
    #if( $height > $maxPageHeight )
      #set( $targetHeight = $maxPageHeight )
      #set( $targetWidth = $mathTool.mul($targetHeight, $aspectRatio)) 
      ##2. Debug w x h,  $targetWidth x $targetHeight <br>
      ## if the image is still wider than allowed, resize again
      #if( $targetWidth > $maxImgWidth )
        #set( $targetWidth = $maxImgWidth )
        #set( $targetHeight = $mathTool.div($targetWidth, $aspectRatio))
        ##3. Debug w x h,  $targetWidth x $targetHeight <br>
      #end
    ## if the image is wider than allowed, resize
    #elseif( $width > $maxImgWidth )
      #set( $targetWidth = $maxImgWidth)
      #set( $targetHeight = $mathTool.div($targetWidth, $aspectRatio))
      ##4. Debug w x h,  $targetWidth x $targetHeight <br>

      ## if the image is still taller than allowed, resize again
      #if( $targetHeight > $maxPageHeight )
        #set( $targetHeight = $maxPageHeight )
        #set( $targetWidth = $mathTool.mul($targetHeight, $aspectRatio ))
        ##5. Debug w x h,  $targetWidth x $targetHeight <br>
      #end
    #else
      #set( $targetWidth = $width )
      #set( $targetHeight = $height )   
      ##6. Debug w x h,  $targetWidth x $targetHeight <br>
    #end

  #end ## #if( $height && $width )

  #if( !$width || !$height)
    ## if no height and width found set to custom 4:3 ratio
    ## Word needs the width and height edge measurement as 'auto' distorts the image in doc exports.
    #set( $targetWidth = $maxImgWidth )
    #set( $ratioPart = $maxImgWidth / 4)
    #set( $targetHeight = $ratioPart * 3)
  #end

  #set( $targetWidth = $mathTool.toInteger($targetWidth ))
  #set( $targetHeight = $mathTool.toInteger( $targetHeight ))
  ##Final Debug w x h,  $targetWidth x $targetHeight <br>
#end 
#########################################################################################################################
                              ########################################################
                              ##             RICH TEXT TABLE MACROS                 ##
                              ########################################################
#########################################################################################################################
##          Macro: formatTables
##          Input: $inString - input string
##                 $maxWidth - number, maximum allowed width(pxs) of tables, resize if greater 
##                 $tableAlign - string, left, right, center alignment of table              
##          Return: string, ready for opening in Word
#########################################################################################################################
#macro( formatTables $inString $maxWidth $tableAlign)
  #if( $inString.contains("<table") )
    ## Clear variables used in the macro
    #set( $output = "" )
    #set( $table = false )
    #set( $maxWidth = $mathTool.toDouble( $maxWidth ))
    #set( $tableCell = false )
    #set( $tableHeader = false )
    #set( $tableCellParagraph = false )
   
    ## For tables, each tag that makes up the table needs to be independently processed, so split the description into
    ## an array where each each value in the array is a single tag of the HTML, split on '>'
    ## $sub = array of individual tags in the description
    #set ( $subs = $inString.split(">"))##

    ## Iterate on each substring
    #foreach ($sub in $subs) ##
      ## append > to each sub except the last one since the split cut it off
      #if( !$foreach.last) #set( $sub = "${sub}>") #end
      
      ## Determine where in a table we are
      #if( $sub.contains("<table") ) 
        #set( $table = true )  
      #end 

      #if( $sub.contains("<thead") ) #set( $tableHeader = true )  #end
      #if( $sub.contains("<td") || $sub.contains("<th") ) #set( $tableCell = true )  #end
      #if( $sub.contains("<p") || $sub.contains("<li") ) #set( $tableCellParagraph = true )  #end

      
      ###########################################################################
      ## - make sure all table cells include a paragraph with an appropriate class
      ###########################################################################

      #if( $table && !$tableHeader && $tableCell )
        #set($sub = $sub.replaceAll('<p(.*)','<p class=TableCell$1')) ##
        #set( $sub = $sub.replaceAll('<li(.*?)>','<li class=TableCell$1>'))
      #end

      #if($table && $tableHeader && $tableCell)
        #set($sub = $sub.replaceAll('<p(.*)','<p class=TableHeader$1')) ##
        #set( $sub = $sub.replaceAll('<li(.*?)>','<li class=TableHeader$1>'))
      #end

      ## cells with no formatting
      #if( $sub.contains("<td") && !$subs[$nextSubIndex].contains("<p") && !$subs[$nextSubIndex].contains("<li") )
        #set( $sub = "$sub<p class=TableCell>")
      #end

      #if( $sub.contains("<th") && ($docName != "Inspection Plan" && $docName != "Release History") && !$subs[$nextSubIndex].contains("<p") && !$subs[$nextSubIndex].contains("<li") )
        #set( $sub = "$sub<p class=TableHeader>")
      #end

      #if( ($sub.contains("</td") || $sub.contains("</th")) &&!$subs[$prevSubIndex].contains("</p") && !$subs[$prevSubIndex].contains("</li") )
        #set( $end = $sub.indexOf("</t") )
        #set( $contents = $sub.substring(0, $end) ) ##
        #set( $endTag = $sub.substring($end, $sub.length()) )
        #set( $sub = "$contents</p>$endTag")
      #end

      ###########################################################################
      ## - make sure all tables have the borders collapsed
      ###########################################################################
      #if( $sub.contains("<table") && !$sub.contains("border-collapse") )
        #if( $sub.contains("style") )
          #set( $sub = $sub.replaceAll("(<table)(.*?style=[\x27\x22])(.*?)([\x27\x22].*?>)","$1$2$3;border-collapse:collapse$4") )
        #else
          #set( $sub = $sub.replaceAll("(<table)(.*?)(>)","$1$2 style='border-collapse:collapse'$3") )
        #end
      #end

      ###########################################################################  
      ## - make if the table has a border definition that the border attribute 
      ##   is placed to ensure the outer border box is created
      ###########################################################################
      #set( $tableInlineStyle = $sub.replaceAll("(<table)(.*?style=[\x27\x22])(.*?)([\x27\x22].*?>)","$3") )
      #if( $tableInlineStyle.contains("border:"))  ## Ensure the outside border is created if the table has a border style definition 
        #set( $sub = $sub.replaceAll("(<table)(.*?style=[\x27\x22])(.*?)([\x27\x22].*?>)","$1 border='1' $2$3$4") )
      #end

      ###########################################################################
      ## - add header background color
      ###########################################################################
      #if( ($tableHeader && $sub.contains("<td")) || $sub.matches("(?s).*<th[^e].*") )
        ## If user has table header color set then use that color
        #set($tableHeaderColor = $sub.replaceAll('background-color:(.*?)[;|"]|[^*]', "$1"))
         
        #if($tableHeaderColor != '' && $!tableHeaderColor)
          #set($tableHeaderBackgroundColor = $tableHeaderColor.trim())
        #else
          #set($tableHeaderBackgroundColor = $tableHeaderBgColor)
        #end

        ## Remove old background color from style attribute with multiple CSS or where Background-Color is the only
        ##  style attribute.
        #set($sub = $sub.replaceAll("background-color:.*?;", ""))
        #set($sub = $sub.replaceAll("style='background-color:.*?'", ""))
        #set($sub = $sub.replaceAll('style="background-color:.*?"', ""))
        #set($sub = $sub.replaceAll('style=""|style=" "', ""))
        #set($sub = $sub.replaceAll("style=''|style=' '", ""))

        ## Preserve already assigned cell color if already set to prevent double inline style setting.
        #if( $sub.contains("style") && !$sub.contains("background-color"))
          #set( $replace = "$1$2;background-color:$tableHeaderBackgroundColor$3" )
          #set( $sub = $sub.replaceAll("(<t.*?style=[\x27\x22])(.*?)([\x27\x22].*?>)",$replace) )
        #elseif(!$sub.contains("style") && !$sub.contains("background-color"))
          #set( $replace = "$1 style='background-color:$tableHeaderBackgroundColor'$2" )
          #set( $sub = $sub.replaceAll("(<t.*?)(>)",$replace) )
        #end
      #end

      ###########################################################################
      ###########################################################################
      ## - add border color
      ###########################################################################
      #*
      #if( $sub.contains("<table") )
          #if( $sub.contains("style") )
            #set( $sub = $sub.replaceAll("(<table)(.*?style=[\x27\x22])(.*?)([\x27\x22].*?>)","$1$2$3;border: 0.5pt solid $tableBorderColor$4") )
          #else
            #set( $sub = $sub.replaceAll("(<table)(.*?)(>)","$1$2 style='border: 0.5pt solid $tableBorderColor'$3") )
          #end
      #end
      *#
      #if( $sub.contains("<td") || $sub.matches("(?s).*<th[^e].*") )
        #if( $sub.contains("style") )
          #set( $replace = "$1$2;border-color: $tableBorderColor$3" )
          #set( $sub = $sub.replaceAll("(<t.*?style=[\x27\x22])(.*?)([\x27\x22].*?>)",$replace) )
        #else
          #set( $replace = "$1 style='border-color: $tableBorderColor'$2" )
          #set( $sub = $sub.replaceAll("(<t.*?)(>)",$replace) )
        #end
      #end

      ###########################################################################
      ###########################################################################
      ##  Map <key, value> each table so that it is possible to recall each row 
      ##   and col of the the table, and to calculate cell widths as a proportion 
      ##    to the longest width of the table. And size Word tables 
      ##    as % in relation to maxWidth
      ###########################################################################
      #set( $findWidth = "(?s).*\bwidth.*?(\d*\.?\d*)(pt|px|in|%).*")
      #set( $findHeight = "(?s).*\bheight.*?(\d*\.?\d*)(pt|px|in|%).*")
      #set( $findColSpan = "(?s).*\bcolspan\s*=\s*[\x27\x22]?([^\x27\x22\s>]+).*")

      #set( $imgCount = 0 )

      #if( $sub.contains("<table" ) )
        ## Create a Map of the Table 
        #set( $tableMap = {} )
        #set( $tableWidthFound = false )
        #set( $rowCount = 0 )
        #set( $start = $foreach.index )
        #set( $end = $subs.size() - 1 )

        ## check for table widths and add <table = width> to map
        #if( $sub.contains( "width" ))
          #convertWidths( $sub $findWidth $start)
          #if( !$elementWidth )
            #set( $success = $tableMap.put("table","no width"))
          #else
            #set( $success = $tableMap.put("table", "${elementWidth}"))
            #set( $tableWidthFound = true)
          #end 
        #elseif( $sub.contains("<table") && !$sub.contains("width"))
          #set( $success = $tableMap.put("table","no width"))
        #end 


        #foreach( $i in [$start..$end] )  
          #set( $colSpan = false )
          ## add each <img# = $i> to tableMap ##  ## add class or id to image for it to be ignored if no resizing
          #if( $subs[$i].contains("<img")) ## store location of img 
            #set( $imgCount = $imgCount + 1) 
            #set( $success = $tableMap.put("image${imgCount}", $i))
          #end 

          #if( $subs[$i].contains("<tr"))
            #set( $rowCount = $rowCount + 1 )
            #set( $rowCellWidths = [] )
          #end 

          #if( $subs[$i].contains("<td") || $subs[$i].contains("<th")) 
            #if( $subs[$i].contains("colspan"))
              #set( $colSpan = true ) 
              #set( $colSpanCount = $mathTool.toNumber($subs[$i].replaceAll( $findColSpan,"$1")))
              #foreach( $x in [1..$colSpanCount ])
                #if( $foreach.first && $subs[$i].contains("width"))
                  #convertWidths($subs[$i] $findWidth $i)
                  #set( $success = $rowCellWidths.add([$elementWidth, $i, $colSpanCount]))
                  #break 
                #else 
                  #set( $success = $rowCellWidths.add(["col", $i]) )
                #end 
              #end 

            #elseif( $subs[$i].contains("width") && !$colSpan ) 
              #convertWidths( $subs[$i] $findWidth $i) 
              #if( !$elementWidth )
                #set( $success = $rowCellWidths.add(["col", $i]) )
              #else 
                #set( $success = $rowCellWidths.add( [$elementWidth, $i] ))
              #end

            #else 
              #set( $success = $rowCellWidths.add(["col", $i]) )
            #end 
          #end 

          ## add each <row# = [[colWidth, $i]...]> to tableMap ## 
          #if( $subs[$i].contains("</tr") )
            #set( $success = $tableMap.put("$rowCount", $rowCellWidths))
          #end 

          #if( $subs[$i].contains("</table") )
            #break
          #end
      
        #end ##foreach( $i in [$start..$end] )  

        ## End of Creating Map of Table ##
        #############################################
        ##<p>Debug Table Map $tableMap

        #############################################
        ## Find Max Row Width and set colGroupKey 
        #############################################
        #set( $maxWidthCount = 0 )
        #set( $maxRowWidth = 0 )
        #set( $maxTotalCols = 0)

        #foreach( $element in $tableMap.entrySet())
          #set( $row = false )
          #set( $tableMapKey = $element.key )
          #set( $row = $element.value )
          #set( $tempRowWidth = 0 )
          #set( $tempWidthCount = 0 )
          #set( $tempTotalCols = 0 )
          #set( $totalRowWidthFound = 0 )
          #set( $totalPercWidthFound = 0 )
        
          #if( $tableMapKey != "table" && !$tableMapKey.contains("image") )
            #set( $row = $element.value )
            #if( $row )
              #foreach( $cell in $row )
                #set( $tempTotalCols = $tempTotalCols + 1)
                #if( !$cell[0].contains("col") && !$cell[0].contains("%"))
                  #set( $cellWidth = $mathTool.toDouble($cell[0]) )
                  #set( $tempWidthCount = $tempWidthCount + 1 )
                  #set( $tempRowWidth = $tempRowWidth + $cellWidth )
                  ##<p>Debug Temp: $cellWidth, $tempWidthCount, $tempRowWidth</p>
                #end  
              #end 

              #if( $tempWidthCount >= $maxWidthCount ) ## store the row with the most unique widths
                #set( $maxWidthCount = $tempWidthCount )
                #set( $colGroupKey = $tableMapKey )
              #end 
              #if( $tempRowWidth > $maxRowWidth ) ## store the greatest width 
                #set( $maxRowWidth = $mathTool.toDouble( $tempRowWidth ) )
              #end 
              #if( $tempTotalCols > $maxTotalCols )
                #set( $maxTotalCols = $tempTotalCols )
              #end 

              ## if we have an abnormally small maxRowWidth for a table expecting 4 or more cols 
              ## set maxRowWidth to the page maxWidth 
              #if( $row.size() >= 4 && $maxRowWidth < 200 )
                #set( $maxRowWidth = $maxWidth )
              #end 
            #end ##if( $row )
          #end ##if( $tableMapKey != "table" && !$tableMapKey.contains("image")  )
        #end ##foreach( $element in $tableMap.entrySet())
        
        #if( $maxRowWidth < 1 )
          #set( $maxRowWidth = $maxWidth )
        #end 

        ## if there is no table width and there are columns without widths found 
        #if( !$tableWidthFound && $maxTotalCols > $maxWidthCount ) ## ensure the maxRowWidth 
        ## has additional width set so no columns have zero width. 
          #set( $additionalWidth = $mathTool.toInteger($maxRowWidth * .2)) 
          #set( $maxRowWidth = $maxRowWidth + $additionalWidth)
        #end 
        ############################################################
        ##<p>Debug final max: $colGroupKey, $maxWidthCount, $maxRowWidth</p>

        ############################################################
        ## Replace Table width with Percent width  
        ############################################################

        #set( $colGroup = "<colgroup>")
        #foreach( $element in $tableMap.entrySet())
          #set( $tableMapKey = $element.key )
          #set( $tableMapValue = $element.value )
    
          #if( $tableMapKey == "table" )
            ## Table Width Replace 

            #if( $tableMapValue.contains("no width"))
              ## No Table Width Found 
              #if( $maxRowWidth > 0 && $maxRowWidth < $maxWidth )
                #set( $tableWidthPerc = $maxRowWidth / $maxWidth * 100 )    
              #else 
                #set( $tableWidthPerc = 100 )
              #end 
              
              #set( $tableWidthPerc = $mathTool.toInteger( $tableWidthPerc ))
              #set( $find = "(<table)(.*?)(>)")
              #set( $replace = "$1$2 width=${tableWidthPerc}% $3")

              ##<p>Debug final tableWidthPerc: ${tableWidthPerc}%</p>
              #if( $tableWidthPerc )
                #set( $sub = $sub.replaceAll($find, $replace)) 
              #end

            #else 
              ## Table Width Found 
              #if( $tableMapValue.contains("%") )
                #set( $tableWidthPerc = $mathTool.toDouble($tableMapValue.replaceAll("%", "")))

              #else
                #set( $tableWidth = $mathTool.toDouble($tableMapValue))
                #if( $tableWidth > $maxWidth )
                  #set( $tableWidthPerc = 100 )
                #else
                  #set( $tableWidthPerc = $tableWidth / $maxWidth * 100 )
                #end 
                #if( $tableWidth > $maxRowWidth ) 
                  #set( $maxRowWidth = $tableWidth )
                #end 
              #end 

              #if( $tableWidthPerc > 100 && $tableWidthPerc < 1 || !$tableWidthPerc )
                #set( $tableWidthPerc = 100 )
              #end 

              #set( $tableWidthPerc = $mathTool.toInteger( $tableWidthPerc)) 
              #set( $find = "(width)(=|:)([\s*|\x27\x22|])?(\d*.*?)(pt|px|in|%)")
              #set( $replace = "$1$2$3${tableWidthPerc}% !important" )
              
              ##<p>Debug final tableWidthPerc: ${tableWidthPerc}%</p>
              #if($tableWidthPerc)
                #set( $sub = $sub.replaceAll($find, $replace) )
              #end 

            #end ## #if( $tableMapValue.contains("no width"))


          ############################################################
          ## Replace Image width/height with px width/height proportionate
          ## to table cell   
          ############################################################
          #elseif( $tableMapKey.contains("image") ) 
              ## Word <img replace px according to cell width ##
              #set( $imgIndex = $tableMapValue )
              #set( $imgSub = $subs[$imgIndex] )
              #set( $cellWidthPx = 0 )
              #if( $cellPerc > 0 )
                  #set( $cellPerc = $mathTool.toDouble( $cellPerc ))
              #else 
                  #set( $cellPerc = $mathTool.toDouble( $tableWidthPerc ))
                  #set( $cellPerc = $cellPerc / $maxTotalCols )
              #end 
              #set( $cellWidthPx = $cellPerc / 100 * $maxWidth )
              #set( $cellWidthPx = $mathTool.toDouble( $cellWidthPx )) 

              #getImgDimensions( $imgSub $cellWidthPx )

              #set( $replace = "width=${targetWidth}" )
              #if( $targetWidth )
                #if( !$subs[$imgIndex].contains("width"))
                  #set( $replace = "<img width=${targetWidth}" )
                  #set( $subs[$imgIndex] = $subs[$imgIndex].replaceAll("<img", $replace) )
                #else
                  #set( $subs[$imgIndex] = $subs[$imgIndex].replaceAll("\bwidth=.?\d*.?",$replace) )
                #end
                  
              #end
              
              #set( $replace = "height=${targetHeight}" )
              
              #if( $targetHeight)
                #if( !$subs[$imgIndex].contains("height"))
                  #set( $replace = "<img height=${targetHeight}" )
                  #set( $subs[$imgIndex] = $subs[$imgIndex].replaceAll("<img", $replace) )
                #else
                  #set( $subs[$imgIndex] = $subs[$imgIndex].replaceAll("\bheight=.?\d*.?",$replace) )
                #end
              #end

          ############################################################
          ## Replace Table Cell Widths with Percent Widths    
          ############################################################
          #else 
            ## Cell Width Replace ## 
            ## Else the tableMapKey is a row# and holds the cols in the row e.g if a row had 2 cols:
            ## <key row#> = <value [[colWidth, subs index #],[[colWidth, subs index #]] > 
            
            #foreach( $col in $tableMapValue )
              #set( $cellPerc = 0 )
              #set( $cellWidth = $col[0])
              #set( $cellIndex = $col[1])
        
              ## if there is only one cell in the row without rowspan size to 100% width 
              #if( $tableMapValue.size() == 1 )
                #set( $cellPerc = 100 )

              ## if cell is already a % then get the double value
              #elseif( $cellWidth.contains("%"))
                #set( $cellPerc = $mathTool.toDouble( $cellWidth.replaceAll("%", "")) )   

              ## else convert cellWidth from pt to % width in proportion to table
              #elseif( $cellPerc == 0 && !$cellWidth.contains("col")) 
                #if( $cellWidth > 0 )
                  #set( $cellPerc = $cellWidth / $maxRowWidth * 100 )
                #end 
              #end 

              ## replace $subs[$i] width with % value
              #if( !$cellWidth.contains("col"))
                #set( $cellPerc = $mathTool.toInteger( $cellPerc)) 
                #if( $cellPerc > 100 && $cellPerc < 1 ) 
                  #set( $cellPerc = 100 ) 
                #end 

                ##<p>Debug Row# $tableMapKey, cellPerc ${cellPerc}%, maxRowWidth $maxRowWidth, cellIndex $cellIndex</p>
                #set( $find = "(width)(=|:)([\s*|\x27\x22|])?(\d*.*?)(pt|px|in|%)")
                #set( $replace = "$1$2$3${cellPerc}%" )
                #if( $cellPerc )
                  #set( $subs[$cellIndex] = $subs[$cellIndex].replaceAll($find, $replace))
                #end 
              #end 
        
              #if( $tableMapKey == $colGroupKey ) 
                #if( $maxWidthCount >= 2 )
                  #if( $col.size() == 3 ) 
                    #set( $colCount = $col[2])
                    #foreach( $x in [1..$colCount])
                      #set( $colGroup = "${colGroup}<col>" )
                    #end 
                  #elseif( $cellWidth.contains("col")) 
                    #set( $colGroup = "${colGroup}<col>" )
                  #else
                    #set( $colGroup = "${colGroup}<col style='width:${cellPerc}%'>" )
                  #end 
                  #if( $foreach.last )
                    #set( $colGroup = "${colGroup}</colgroup>")
                  #end 
                #end 
              #end 
    
            #end ##foreach( $col in $tableMapValue )    

          #end ##if( $tableMapKey == "table" )
        #end ##foreach( $element in $tableMap.entrySet())

      #end ##if( $sub.contains("<table" ) ) ## End of checking table for widths 

      ###########################################################################
    
      ###########################################################################
      ## Apply table alignment from $tableAlign. 
      ## - DOC alignments are removed from the table and set to a parent div
      ###########################################################################
      #if( $sub.contains("<table") )  
        #set( $sub = $sub.replaceAll("(margin-left|margin-right|margin)(:.*?)(;|[\x27\x22])", "$3") )
        #set( $sub = $sub.replaceAll("align=([\x27\x22].*?[\x27\x22]|\w*)", "") ) ## take alignment off

        #if( $format == 'doc')  
          #set( $sub = $sub.replaceAll("<table", "<div align=$tableAlign><table"))
        #end 

      #end
      ##<p>Debug Table Align: $tableAlign<p>

      ###########################################################################
      ## close the parent div which has the alignment for the table if Word
      #if( $sub.contains("</table") && $format == 'doc')
        #set( $sub = "$sub</div>")  
      #end 
 
      ###########################################################################
      ## Miscellaneous cell style transformations
      ###########################################################################
      #set( $sub = $sub.replaceAll("padding.*?([;|\x27\x22])", "$1") )
      #set( $sub = $sub.replaceAll('(style=")[;| ]+', '$1'))

      ## Handle text content alignment for vertical text on tables
      #if($sub.contains("transform:rotate(180deg);"))
        #set( $sub = $sub.replaceAll("transform:rotate\(180deg\);","mso-rotate:90;") )
      #end  

      ###########################################################################
      ## add the processed sub to the output string
      #set ( $output = "${output}${sub}" ) ##

      ## Determine where in a table we are
      #if( $sub.contains("</p") || $sub.contains("</li") ) #set( $tableCellParagraph = false )  #end ##
      #if( $sub.contains("</thead") ) #set( $tableHeader = false ) #end ##
      #if( $sub.contains("</td") || $sub.contains("</th") ) #set( $tableCell = false ) #end ##
      #if( $sub.contains("</table") ) #set( $table = false ) #end ##
    
    #end ##foreach ($sub in $subs)

  #else
    #set ( $output = $inString )
  #end ##if( $inString.contains("<table") )

  #######################################################################################
  ## + WORD caption handling by extracting caption and creating a new single cell table on top
  ##
  ##  - This allows preservation of the caption alignment and prevents word from applying
  ##    heading formatting to the caption as it does when caption is still present on 
  ##    original table as the first table row.
  ## 
  ##  - #buildTableCaptions_DOC will add captions to tables that do not have them
  ##    if $TOT_includeAllTables is true so that they can be included in the TOT
  #####################################################################################*#

  #if($output.contains("</table>"))
    #buildTableCaptions_DOC( $output $findWidth)
  #end  

  $output
#end 
#########################################################################################################################
##          Macro: convertWidths, convert widths found on a table element to px unless its a percent width. 
##          Input: $inputElement - string, table element (table, th, td) 
##                 $findWidth - string, regex pattern to find width
##          Output: $elementWidth, pixel width unless its a percent width 
#######################################################################################################################*#
#macro( convertWidths $inputElement $findWidth $idx )
  #set( $elementPerc = false )
  #set( $elementWidth = $inputElement.replaceAll( $findWidth,"$1") )
  #set( $elementWidth = $mathTool.toInteger( $elementWidth.trim())) 

  #if( $elementWidth > 0 )
    #set( $elementMeasurement = $inputElement.replaceAll( $findWidth,"$2") )

    #if( $elementMeasurement.contains("pt") ) 
      #set( $elementWidth = $mathTool.round($elementWidth * 1.33 )) ## convert to pixels 

    #elseif( $elementMeasurement.contains("in"))
      #set( $elementWidth = $mathTool.round($elementWidth * 72 )) ## convert to pixels

    #elseif( $elementMeasurement.contains("%") ) 
      #set( $elementWidth = "${elementWidth}%" )
    #end
  #elseif( $elementWidth == 0 ) 
    ## replace zero found widths with nothing
    #set( $subs[$idx] = $subs[$idx].replaceAll("\bwidth(=|:)[\s*|\x27\x22|]?\d*.*?(pt|px|in|%);*", ""))
    #set( $elementWidth = false)
  #else 
    #set( $elementWidth = false)
  #end
#end 
##
#########################################################################################################################
## Macro: buildTableCaptions_DOC                                                                                            
##  1. For each table found check if it has a caption                                                                  
##  2. If caption utilize the caption content and construct caption for Word                                          
##  3. Else if a table does not have captions, option to format table with captions and include in the TOT     
##  Input: $tableString, RT string w/ table elements
##  Output: $output with proper table captions                                                                    
#######################################################################################################################*#
#macro( buildTableCaptions_DOC $tableString $findWidth )
#set( $tempInString = "")
#set( $caption = "")
#set( $tableString = $tableString.replaceAll("<table", "<table[TABLE]"))
#set( $splitList = $tableString.split("<table"))
#set( $captionAlign = 'center') ## default 

    #foreach( $splitItem in $splitList )
        #if( $splitItem.contains("[TABLE]"))

          ## Replace the placeholder with the <table tag that was removed in split
          #set( $splitItem = $splitItem.replaceAll("\[TABLE\]", "<table"))

          ## Get the table width 
          #set( $tableWidth = $splitItem.replaceAll("(?s)<table.*?\bwidth.*?(\d*\.?\d*)(pt|px|in|%).*","$1$2"))
          #if( $tableWidth == $splitItem )
              #set( $tableWidth = "100%")
          #end 

          #set( $captionContent = "")
          #if( $splitItem.contains("</caption>"))

              ## Extract Caption Content

              #set( $captionContent = $splitItem.replaceAll("(?s).*?(<caption.*?>.*?<\/caption>).*", "$1"))
              #set( $getAlign = $captionContent.replaceAll("<caption(.*?)>", "$1"))
              #set( $captionContent = $captionContent.replaceAll("<caption.*?>|<\/caption>", ""))
              ##DEBUG $captionContent<br>

              #set( $captionAlign = "")
              #set( $captionAlign = $getAlign.replaceAll("(?s).*?\btext-align:(\w*).*", "$1"))
              ##DEBUG $captionAlign<br>

              #set( $captionContent = $captionContent.replaceAll("<\/p>", ""))
              #set( $captionContent = $captionContent.replaceAll("<p.*?>", ""))
          #end ##if( $splitItem.contains("</caption>"))

          #if( $captionContent.length() > 0 || $TOT_includeAllTables )
              #set( $tableRefNum = $tableRefNum + 1) 
              #set( $caption = "<table border='0' cellpadding='1' cellspacing='0' style='border-collapse:collapse;borders:none;width:$!tableWidth'>
                                  <tr>
                                      <td style='border:none !important'>
                                          <p class=MsoCaption align=center style='text-align:$!captionAlign;page-break-after:
                                          avoid'>
                                          #if( $tableOfTables || $TOT_includeCaptionPrefix) 
                                          <a name='_TBL${tableRefNum}'>Table </a><!--[if supportFields]><span
                                          style='mso-bookmark:_TBL${tableRefNum}'></span><span style='mso-element:field-begin'></span><span
                                          style='mso-bookmark:_TBL${tableRefNum}'><span style='mso-spacerun:yes'></span>SEQ Table
                                          \\* ARABIC <span style='mso-element:field-separator'></span></span><![endif]--><span
                                          style='mso-bookmark:_TBL${tableRefNum}'><span style='mso-no-proof:yes'> ${tableRefNum}</span></span><!--[if supportFields]><span
                                          style='mso-bookmark:_TBL${tableRefNum}'></span><span style='mso-element:field-end'></span><![endif]--><span
                                          style='mso-bookmark:_TBL${tableRefNum}'> 
                                          #end</span>$!captionContent</p>
                                      </td>
                                  </tr>
                                </table>")

              #set($splitItem = $splitItem.replaceAll("(?s)<caption.*?>.*?<\/caption>", ""))
              #set($splitItem = $splitItem.replaceAll("<table", "$!caption<table"))
          #end ##if( $captionContent.length() > 0 || $TOT_includeAllTables )

        #end  ## #if( $splitItem.contains("[TABLE]"))

        ## Rebuild the now modified inString content
        #set ( $tempInString = "${tempInString}${splitItem}" )

    #end ## ##foreach ($splitItem in $splitList)

    ## Reassign inString to its now caption modified version
    #set($output = $tempInString) ## Returns $output
#end 
## 
#########################################################################################################################
                              ########################################################
                              ##               RELATIONSHIP MACROS                  ##
                              ########################################################
#########################################################################################################################
##   Macro: getRelationships
##   Inputs: $baselineMode - Global, tells the report if the export was from a baseline or not 
##           $baselineId - Global, ID of a baseline       
##           $inDoc - current item
##           $inDownstream - true provides downstream relationships, false provides upstream relationships
##   Output: $returnRels - list of relationships with sub-elements of "fromItem" and "toItem" each of type item
##           
#######################################################################################################################*#
#macro( getRelationships $inDoc $inDownstream )
  #set( $returnRels = [] )

  #if( $baselineMode && $baselineId )
    #set( $inDocId = $inDoc.id )
    #* If the item is active then it is the most recent version of the item. 
    * The $inDoc.id is equivalent to the $inDoc.currentVersion.originDocument.id. 
    * Thus we utilize the $inDoc.id as it is the more efficient retrieval of that id. 
    * This 'current version' id will be utilized as the first argument in the method
    * getRelationships($currentVersionId,$baselineId,$start,$count)) in the #getBaselineRelationships macro. 
    *
    * If the item is not active, then we have a prior version of the item or the item has been deleted, 
    * but we still want it to show up in the baselined trace - we want to show every related 
    * item that existed when the baseline snapshot was made. In this case, to get the current version id of the 
    * non-active item we utilize $inDoc.currentVersion.originDocument.id.
    *#
    #if( !$inDoc.active )
      #set( $currentVersion = $inDoc.currentVersion ) 
      #set( $inDocId = $currentVersion.originDocument.id ) 
    #end 
    #getBaselineRelationships( $inDocId, $baselineId, $inDoc, $inDownstream ) ## Creates $returnBaselineRels 
    #set( $returnRels = $returnBaselineRels )

  #else
    #set( $rels = [] )
    #set ( $rels = $documentSource.getRelationshipsForDocument($inDoc.id, $inDownstream) )
    #foreach( $rel in $rels )
      #if( $inDownstream )  ## Get Downstream Relationships
        #if ( $rel.toDocument.active )
          #set( $success = $returnRels.add( $rel ) )
        #end
      #else                 ## Get Upstream Relationships
        #if ( $rel.fromDocument.active )
          #set( $success = $returnRels.add( $rel ) )
        #end
      #end
    #end
  #end

#end
##
#########################################################################################################################
##  Macro: getBaselineRelationships
##  Input: $currentVersionId - ID of the currentVersion of an item 
##         $baselineId - ID of a baseline   
##         $inDoc - item in hand ( may be active, may not be active if its a prior version item or deleted )
##         $inDownstream - true provides downstream relationships, false provides upstream relationships    
##  Output: $returnBaselineRels list of upstream Or downstream baseline relationships 
#######################################################################################################################*#
#macro( getBaselineRelationships $currentVersionId $baselineId $inDoc $inDownstream )
  #set( $start = 0 )
  #set( $count = 20 )
  #set( $versionedRelationships = [] )
  #set( $returnBaselineRels = [])
  #set( $pageSize = 20)
  #set( $relatedIds = [] )
  ##
  #set($baseRelsPage = $documentSource.getRelationships($currentVersionId,$baselineId,$start,$count))
  ##
  #set( $totalRels = [])
  #set( $totalRels = $baseRelsPage.getPageInfo().getTotalResults())
  ## DEBUG Baseline Page Info: $baseRelsPage.getPageInfo() <br><br>
  ## DEBUG Baseline Relationship Count: $baseRelsPage.getPageInfo().getTotalResults()<br><br>
  ## DEBUG Baseline Results: $baseRelsPage.getResults() 
  #if( $totalRels && $totalRels > 0)
    #set( $page_count = $mathTool.floor($mathTool.div($totalRels,$pageSize)) )
    #foreach( $page in [0..$page_count])
      #set( $baseRelsPage = $documentSource.getRelationships($currentVersionId,$baselineId,$start,$count))
      #set( $baseRelsPageResults = $baseRelsPage.getResults())
      #if( $baseRelsPageResults )
       #set( $success = $versionedRelationships.addAll($baseRelsPageResults ))
      #end 
      #set( $start = $start + $count)
    #end
  #end
  ##
  #foreach( $versionedRelationship in $versionedRelationships )
    #if( $inDownstream ) ## Get Downstream Relationships
      #set( $upItemId = $versionedRelationship.getFromItem().getValue().get(0) )
      #set( $upItemVersion = $versionedRelationship.getFromItem().getValue().get(1) )
      
      ## Get CountourItem by Id and Version ## 
      #set( $upDocVersion = $documentSource.getVersionByDocAndVersionNumber($upItemId,$upItemVersion))
      #set( $upDoc = $upDocVersion.document)

      #if( $inDoc.id == $upDoc.id ) 
        #set( $dnItemId = $versionedRelationship.getToItem().getValue().get(0) )
        #set( $dnItemVersion = $versionedRelationship.getToItem().getValue().get(1) )
    
        ## Get CountourItem by Id and Version ##  
        #set( $dnVersion = $documentSource.getVersionByDocAndVersionNumber($dnItemId,$dnItemVersion))
        #set( $dnDoc = $dnVersion.document ) 
        ##<tr><td colspan=20>$dnDoc.documentKey, $dnItemId, $dnDoc.id, $dnItemVersion, $dnDoc.currentVersion.versionNumber</td></tr>

        #if( !$relatedIds.contains($dnDoc.id) )
          #set( $success = $relatedIds.add($dnDoc.id) )
          #set( $success = $returnBaselineRels.add( {"fromDocument":$inDoc,"toDocument":$dnDoc} ) )
        #end
      #end 

    #else
      #set( $dnItemId = $versionedRelationship.getToItem().getValue().get(0) )
      #set( $dnItemVersion = $versionedRelationship.getToItem().getValue().get(1) )
      
      ## Get CountourItem by Id and Version ## 
      #set( $dnDocVersion = $documentSource.getVersionByDocAndVersionNumber($dnItemId,$dnItemVersion))
      #set( $dnDoc = $dnDocVersion.document)
    

      #if( $inDoc.id == $dnDoc.id ) ## Get Upstream Relationships
        #set( $upItemId = $versionedRelationship.getFromItem().getValue().get(0) )
        #set( $upItemVersion = $versionedRelationship.getFromItem().getValue().get(1) )
  
        ## Get CountourItem by Id and Version ##  
        #set( $upVersion = $documentSource.getVersionByDocAndVersionNumber($upItemId,$upItemVersion))
        #set( $upDoc = $upVersion.document )
 

        #if( !$relatedIds.contains( $upDoc.id) )
          #set( $success = $relatedIds.add( $upDoc.id) )
          #set( $success = $returnBaselineRels.add( {"fromDocument":$upDoc,"toDocument":$inDoc} ) )
        #end
      #end

    #end 
  #end
#end
#########################################################################################################################
                              ########################################################
                              ##                  CONTEXT MACROS                    ##
                              ########################################################
#########################################################################################################################
##    Macro: getContainer                                                           
##    Inputs: $baselineMode (type:boolean), flags if the report if the export was from a baseline or not                                                                               
##    Output: $containerDoc (type:document), the container obj report is exported from, to be used in report
#########################################################################################################################
#macro( getContainer $baselineMode )

  ## Export From Baseline
  #if($baselineMode)
    #set($containerDoc = $baselineSource.getBaseLine($mathTool.toInteger($contextId)))
  #else
    #set($docNode = $documentSource.getDocumentNode(5, $documentList[0].document.id))
    #set($parentNode = $docNode.getParentNode())
    
    ## Export From Project
    #if(!$parentNode.parentNode.id && $contextType.length() == 0)
      #set($containerDoc = $project)
    ## Export From Test Plan
    #elseif($documentList[0].document.documentType.documentTypeKey == "TSTPL")
      #set($containerDoc = $documentList[0].document)
    ## Export From Test Cycle
    #elseif($contextType.toUpperCase() == "TESTCYCLE")
      #set($containerDoc = $documentList[0].document.testCycle)
    #else
      #if($!contextId)
        ## Export From Filter
        #if($contextType.toUpperCase() == "ADVANCED FILTER")
          #set($containerDoc = $filterSource.getSmartFilter($mathTool.toInteger($contextId)))
        ## Export From Project Tree
        #else
          #set($containerDoc = $documentSource.getDocument($mathTool.toInteger($contextId)))
        #end
      #else
        #set($containerDoc = false)
      #end
    #end
  #end

#end
#########################################################################################################################
##    Macro: getReferenceableDocIds
##    Input: documentList
##    Output: getReferenceableDocIds - list of all the doc IDs that will be referenceable in the document
#########################################################################################################################
#macro( getReferenceableDocIds ) 
  #foreach( $vDoc in $documentList )
    #set( $doc = $vDoc.document )
    #if($baselineMode)
      #set( $success = $referenceableDocIds.add($doc.currentVersion.id) )
    #else
      #set( $success = $referenceableDocIds.add($doc.id) )
    #end
  #end
#end
#########################################################################################################################
##    Macro: printApproversTable
##    Input: $baselineId, globally available 
##    Output: 'Signature Approval' table with full names of users who have signed the baseline & dates of signatures
#########################################################################################################################
#macro( printApproversTable $baselineId)
  #if( $baselineId )
    #set( $baseSignatures = $baselineSource.getSignaturesForBaseLine( $baselineId ))

    #if( $baseSignatures.size() > 0)
      <p class=MsoSubtitle style='text-transform:uppercase;'>Signature Approval</p>
      <table style="width:100%;border-collapse:collapse;">
        <thead>
          <tr>
            <th class=TableHeader style="background:$tableHeaderBgColor;width:50%">Signed By</th>
            <th class=TableHeader style="background:$tableHeaderBgColor;width:50%">Signed On (Pacific Time)</th>
          </tr>
        </thead>
        #foreach( $sig in $baseSignatures)
          <tr>
            <td class=TableCell style="width:50%;">$sig.user.fullName</td>
            <td class=TableCell style="width:50%;">#getDateTime($sig.createdDate $timeZone)</td>
          </tr>
        #end
      </table>
    #end                  
  #end ##if( $baselineId )

#end 
#########################################################################################################################
                              ########################################################
                              ##                ITEM LINK MACROS                    ##
                              ########################################################
#########################################################################################################################   
##    Macro: createLink                                                                                              
##    Input: $item, type Document or ContourItem obj, what the link is to be created for     
##           $versionNumber, the version of the $item                                                  
##    Output: $createLinkReturn - the src link to the item in Jama ConnectÂ®                                          
#########################################################################################################################
#macro( createLink $item $versionNumber) 
  #set( $createLinkReturn = "" )
  #set( $projectId = $project.id.toString())
  #set( $docId = $item.currentVersion.originDocument.id.toString())

  #if($item.documentType.display == "Component" || $item.documentType.display == "Set" || $item.documentType.display == "Folder")
    #set( $createLinkReturn = $baseUrl + '/perspective.req#/containers/' + $docId + '/details?/?projectId=' + $projectId)
  #elseif( $item.documentType.display == "Test Plan")
    #set( $createLinkReturn = $baseUrl + '/perspective.req#/testPlans/' + $docId + '/home/?projectId=' + $projectId)
  #elseif( $item.documentType.display == "Test Run")
    #set( $createLinkReturn = $baseUrl + '/perspective.req#/testRuns/' + $docId + '?projectId=' + $projectId)
  #elseif( $item.documentType.display == "Test Cycle")
    #set( $createLinkReturn = $baseUrl + '/perspective.req#/testPlans/' + $docId + '?projectId=' + $projectId)
  #else
    #set( $createLinkReturn = $baseUrl + '/perspective.req#/items/' + $docId + '?projectId=' + $projectId)
  #end

  #if( $versionNumber)
    #set( $createLinkReturn = $createLinkReturn + "&version=" + $versionNumber)
  #end

  #if($baselineMode)
    #set( $createLinkReturn = $createLinkReturn + "&baselineId=" + $baseline.id)
  #end
  ##$createLinkReturn
#end
#########################################################################################################################
                              ########################################################
                              ##                 DATE/TIME MACROS                   ##
                              ########################################################
#########################################################################################################################
##    Macro: getDate
##    Input: $inputDate- date obj 
##           $inputTimeZone - string, TZ Identifier 
##    Output: Formatted date in the desired timezone
#########################################################################################################################
#macro( getDate $inputDate $inputTimeZone )
  #set( $outTz = $dateTool.getTimeZone().getTimeZone($inputTimeZone) )
  #set( $locale = $dateTool.getLocale() )
  #set( $date = $dateTool.format( 'MM/dd/yyyy', $inputDate, $locale, $outTz ))
  $!date
#end
#########################################################################################################################
##    Macro: getDateTime
##    Input: $inputDate- date obj 
##           $inputTimeZone - string, TZ Identifier 
##    Output: Formatted date in the desired timezone
#########################################################################################################################
#macro( getDateTime $inputDate $inputTimeZone )
  #set( $outTz = $dateTool.getTimeZone().getTimeZone($inputTimeZone) )
  #set( $locale = $dateTool.getLocale() )
  #set( $dateTime = $dateTool.format( 'MM/dd/yyyy hh:mm a', $inputDate, $locale, $outTz ))
  $!dateTime
#end
#########################################################################################################################
                              ########################################################
                              ##                 HEADERS & FOOTERS                  ##
                              ########################################################
#########################################################################################################################
##    Macro:  responsiveHeaderFooter
##    Input:  none
##    Note:   If .doc output has portrait && landscape layouts, ensure that header and footer 
##            table & cell widths are a percentage of the page so they responsively size with the layout. 
##            Call the macro directly after the opening of each page layout div. 
##    Output: Header and Footers printed to the page. 
#########################################################################################################################
#macro ( responsiveHeaderFooter )

#set ($rootDoc = $documentSource.getDocument($mathTool.toInteger($contextId))) ## Establishes Root Doc for Title Purposes

      <table style='margin-left:15in'>
        <tr style='height:.1in;mso-height-rule:exactly'>
          <td>
            <div style='mso-element:header;' id=pageHeader>
                <table style="width: 100%; border-collapse: collapse; margin: 0;">
                  <tr style="height: 8pt;">
                    <td style="width: 15%; border: 1px solid black; border-bottom: 1px solid black; margin-right: auto; text-align:center;" align= center rowspan="3">
                      <!--[if gte vml 1]>
                          <v:shape style="width:71.25pt;height:36.75pt; visibility:visible;">
                          <v:imagedata src="cid:image001.jpg" o:title="SPR Therapeutics LOGO 361 R"/>
                          </v:shape>
                      <![endif]-->
                    </td>
                    <td style="width: 60%; border: 1px solid black; text-align: center; font-size: 6pt;">Document Name</td>
                    <td style="width: 25%; border: 1px solid black; text-align: center; font-size: 6pt;">Number / Revision</td>
                  </tr>
                  <tr style="height: 25pt;">
                    <td style="border: 1px solid black; text-align: center; font-size: 10pt;">$rootDoc.name<br>$project.name</td>
                    <td style="border: 1px solid black; text-align: center; font-size: 12pt;">&#35;&#35;&#35;&#35;-XX-&#35;&#35;&#91;&#35;&#35;&#93;</td>
                  </tr>
                  <tr style="height: 15pt;">
                    <td style="border: 1px solid black; text-align: center; font-size: 8pt;">Business Confidential</td>
                    <td class="HeaderTableCell"><p class = "MsoHeader" style="margin: 0; font-size: 8pt; text-align: center;">  ## Page Numbers
                    Page&nbsp;<!--[if supportFields]><span style='mso-element:field-begin'></span>PAGE <span style='mso-element:field-separator'></span>
                    <![endif]-->1<!--[if supportFields]><span style='mso-element:field-end'></span><![endif]-->&nbsp;of&nbsp;<span style='mso-field-code:" NUMPAGES  "'></span></p></td>
                  </tr>
                  <tr style="height: 20pt; mso-height-rule:exactly">
                    <td colspan="3" style="border: none; background: none; height: 20pt;"></td>&nbsp;</td>
                  </tr>
                </table>
            </div>
            <div style='mso-element:footer;' id=pageFooter>
              <p class=MsoFooter style="color: red; font-size: 12pt;" align="center">BUSINESS CONFIDENTIAL
              </p>
            </div>
          </td>
        </tr>
      </table>
          
#end 
#########################################################################################################################

#########################################################################################################################
#################################################################################################
########                                                                                       ## 
########  CUSTOM MACROS: INSERT/BUILD CUSTOM MACROS HERE                                       ##
########                                                                                       ## 
#################################################################################################

#########################################################################################################################
##          Macro: gatherChildItems
##          Input: $childItems $parentItemChildNodes $validChildItemTypes
##          Return: gathers all parent contained child items items and stores them in returned $childItems
#########################################################################################################################
#macro (gatherChildItems $childItems $parentItemChildNodes $validChildItemTypes)

  #foreach ($node in $parentItemChildNodes)
    #set ($childItem = $documentSource.getDocument($node.refId))

    

    #if ($childItem.active || $baselineMode)
      #if ($validChildItemTypes.contains($childItem.documentType.id)  || $validChildItemTypes.size() == 0)
         #set ($success = $childItems.add($childItem))
      #end
    #end

    #if ( $baselineMode )
      #set ($childItemNode = $documentSource.getDocumentNodeForBaseLine(5, $mathTool.toInteger($childItem.id), $mathTool.toInteger($baselineId)))
      #set ($childItemChildNodes = $childItemNode.getAllChildren())
    #else
      #set ($childItemNode = $documentSource.getDocumentNode(1, $mathTool.toInteger($childItem.id)))
      #set ($childItemChildNodes = $childItemNode.getAllChildNodes())
    #end

    #if ($childItemChildNodes.size() != 0)
      #gatherChildItems ($childItems $childItemChildNodes $validChildItemTypes)
    #end

  #end

#end


                              ########################################################
                              ##               ITEM HEADING MACROS                  ##
                              ########################################################
#########################################################################################################################
##    Macro: getHierarchyLevel
##    Input: $doc - ContourItem type object
##           Globally available: $baselineMode - true: export was from a baseline, false: export was from the project
##           Globally available: $baselineId   - ID of the baseline that the items are part of, if in baseline mode
##    Output: $headingLevel - number, what heading level this item is in Jama ConnectÂ®  relative to the container
#########################################################################################################################
#macro( getHierarchyLevel $doc $baselineMode $baselineId )
  ## Get hierarchy from the baseline
  #if( $baselineMode )
    #set( $docNode = $documentSource.getDocumentNodeForBaseLine(5, $mathTool.toInteger($doc.id), $mathTool.toInteger($baselineId)))
  ## Get hierarchy from the project
  #else
    #set( $docNode = $documentSource.getDocumentNode(5, $doc.id))
  #end
  ##Debug: $docNode
  
  #if(!$docNode.indent)
    #set( $headingLevel = 1)
  #else
    #set( $headingLevel = $docNode.indent)
  #end

  #if( !$headingLevelTop )
    #set($headingLevelTop = $headingLevel)
  #end
  #set( $headingLevel = $headingLevel - $headingLevelTop + 1 )
#end
#########################################################################################################################
##    Macro: formatItemDefault 
##    Input: $doc - ContourItem type obj
##           $headingLevel - the heading level of the item 
##           $includeDescription - boolean true or false 
##    Output: Heading with/without description. 
##
##    Word notes- cross references: headings have a mso-bookmark name with "_API" + the identifier "_API$docID"
#########################################################################################################################
#macro( formatItemDefault $doc $headingLevel $includeDescription )
  #if( $baselineMode ) 
    #set($docID = $doc.currentVersion.id) 
  #else 
    #set($docID = $doc.id)
  #end
  
  #if( $headingLevel < 7 )
    <h$headingLevel style='text-align:left !important;'>
      <a name="_API$docID"><span style='mso-bookmark:_API$docID'>$doc.name</span></a>
    </h$headingLevel>
  #else
    <p class=MsoHeading7 style='text-align:left !important;'>
      <a name="_API$docID"><span style='mso-bookmark:_API$docID'>$doc.name</span></a>
    </p>
  #end

  #if( $includeDescription )
    #formatRichText($doc.description )
  #end 

#end
#############
#############
#################################################################################################
########                                                                                       ## 
########     REPORT BODY                                                                       ##
########                                                                                       ##                                              
#################################################################################################
#############
#############
<body>
  <div class=WordSectionPortrait> 
    #responsiveHeaderFooter ()

    #################################################################################################
    ########                                                                                       ## 
    ########  TITLE PAGE:                                                                          ##
    ########                                                                                       ##                                              
    #################################################################################################
    <div class='TitlePage'>

        <table class=MsoNormalTable border=1 cellspacing=0 cellpadding=0 align=left width="80%" 
        style='width:80.0%;
        border-collapse:collapse;
        border:none;
        mso-border-left-alt:solid #3AAF4A 2.25pt;
        mso-table-overlap:never;
        mso-yfti-tbllook: 1184;
        mso-table-lspace:9.35pt;
        margin-left:3in;
        mso-table-rspace:9.35pt;
        margin-right:7.1pt;
        mso-table-anchor-vertical:page;
        mso-table-anchor-horizontal:margin;
        mso-table-left:115pt;
        mso-table-top:235pt;
        mso-padding-alt:0in 5.4pt 0in 5.4pt'>
          <tr style='mso-yfti-irow:0;mso-yfti-firstrow:yes'>
            <td width=498 valign=top style='width:373.5pt;border:none;border-left:solid #3AAF4A 2.25pt; padding:0in 5.4pt 0in 5.4pt'>
              <p class=MediumShading1-Accent11 style='mso-element:frame;mso-element-frame-hspace: 9.35pt;mso-element-wrap:around;mso-element-anchor-vertical:page;
              mso-element-anchor-horizontal: margin;mso-element-left:center;mso-element-top:198.8pt;mso-height-rule:exactly'><!--[if supportFields]>
              <spanstyle='font-size:40.0pt;mso-bidi-font-family:Calibri;color:black;mso-themecolor:text1'><span style='mso-element:field-begin'>
              </span><spanstyle='mso-spacerun:yes'>&nbsp;</span><spanstyle='mso-spacerun:yes'>&nbsp; </span>contextName<spanstyle='mso-spacerun:yes'>
              &nbsp; </span>\* MERGEFORMAT <span style='mso-element:field-separator'></span></span><![endif]-->
              <span style='font-size:40.0pt; mso-bidi-font-family:Calibri;color:black;mso-themecolor:text1'>
              <spanstyle='mso-no-proof:yes'>$rootDoc.name</span></span><!--[if=supportFields]>
              <spanstyle='font-size:40.0pt;mso-bidi-font-family:Calibri;color:black;mso-themecolor:text1'>
              <span style='mso-element:field-end'></span></span><![endif]-->
              <spanstyle='font-size:40.0pt;mso-bidi-font-family:Calibri;color:black;mso-themecolor:text1'><o:p></o:p></span></p>
            </td>
          </tr>
          <tr style='mso-yfti-irow:1;mso-yfti-lastrow:yes'>
            <td width=498 valign=top style='width:373.5pt;border:none;border-left:solid #3AAF4A 2.25pt;padding:.15in 5.75pt .15in 5.75pt'>
              <p class=MediumShading1-Accent11 style='mso-element:frame;mso-element-frame-hspace:9.35pt;mso-element-wrap:around;mso-element-anchor-vertical:page;mso-element-anchor-horizontal:margin;mso-element-left:center;mso-element-top:198.8pt;mso-height-rule:exactly'><spanstyle='font-size:11.0pt;mso-bidi-font-family:Calibri;color:black;mso-themecolor:text1'>Produced by </span><!--[if supportFields]><span style='font-size=:11.0pt;mso-bidi-font-family:Calibri;color:black;mso-themecolor:text1'><spanstyle='mso-element:field-begin'></span><spanstyle='mso-spacerun:yes'></span>$userSource.currentUser.fullName,<spanstyle='mso-spacerun:yes'>&nbsp;</span><span style='mso-elem=ent:field-separator'></span></span><![endif]--><span style='font-size:11.0pt;mso-bidi-font-family:Calibri;color:black;mso-themecolor:text1'><spanstyle='mso-no-proof:yes'></span></span><!--[if supportFields]><spanstyle='font-size:11.0pt;mso-bidi-font-family:Calibri;color:black;mso-th=emecolor:text1'><span style='mso-element:field-end'></span></span><![endif]--><!--[if supportFields]><span style='font-size:11.0pt;mso-bidi-font-family:Calibri;color:black;mso-themecolor:text1'><spanstyle='mso-element:field-begin'></span><spanstyle='mso-spacerun:yes'>&nbsp;</span><spanstyle='mso-spacerun:yes'>&nbsp;</span>$dateTool.get('default','short')<span style='mso-element:field-separator'></span></span><![endif]--><spanstyle='font-size:11.0pt;mso-bidi-font-family:Calibri;color:black;mso-themecolor:text1'><span style='mso-no-proof:yes'></span></span><!--[if supportFields]><spanstyle='font-size:11.0pt;mso-bidi-font-family:Calibri;color:black;mso-themecolor:text1'><span style='mso-element:field-end'></span></span><![endif]--><spanstyle='font-size:11.0pt;mso-bidi-font-family:Calibri;color:black;mso-themecolor:text1'><o:p></o:p></span></p>
            </td>
          </tr>
        </table>
      </div>
    <br clear=all style='mso-special-character:line-break;page-break-before:always'>
    <p class=MsoNormal><o:p>&nbsp;</o:p></p>

    </div> ## <div class=TitlePage>

    #################################################################################################
    ########                                                                                       ## 
    ########  TABLES OF...                                                                         ##
    ########                                                                                       ##                                              
    #################################################################################################
    #if( $format == "doc" )
      #if( $tableOfContents ) 
        <p class=MsoTocHeading>Table of Contents</p>
        <p class=MsoNormal>
        <!--[if supportFields]><span style='mso-element:field-begin'></span> 
        TOC \h \o 1-7 \* MERGEFORMAT <span style='mso-element:field-separator'></span>
        <![endif]--><span style='color:red;mso-no-proof:yes'>Select this line by clicking on it and press F9 to update the TOC and Cross-References</span>
        <!--[if supportFields]><span style='mso-element:field-end'></span><![endif]--></p>
        <br clear=all style='mso-special-character:line-break;page-break-before:always'>
      #end 
      #if( $tableOfFigures )
        <p class=MsoTocHeading>Table of Figures</p>
        <p class=MsoNormal>
        <!--[if supportFields]><span style='mso-element:field-begin'></span>
        TOC \h \z \c &quot;Figure&quot;<span style='mso-element:field-separator'></span><![endif]-->
        <span style='color:red;mso-no-proof:yes'>Select the entire document (Windows: Ctrl+a) 
        (Mac: Command+a) and press F9 to update the TOC and Cross-References</span>
        <!--[if supportFields]><span style='mso-element:field-end'></span><![endif]--></p>
        <br clear=all style='mso-special-character:line-break;page-break-before:always'>
      #end
      #if( $tableOfTables )
        <p class=MsoTocHeading>Table of Tables</p>
        <p class=MsoNormal>
        <!--[if supportFields]><span style='mso-element:field-begin'></span>
        TOC \h \z \c &quot;Table&quot;<span style='mso-element:field-separator'></span><![endif]-->
        <span style='color:red;mso-no-proof:yes'>Select the entire document (Windows: Ctrl+a) 
        (Mac: Command+a) and press F9 to update the TOC and Cross-References</span>
        <!--[if supportFields]><span style='mso-element:field-end'></span><![endif]--></p>
        <br clear=all style='mso-special-character:line-break;page-break-before:always'>
      #end
    #end ##if( $format == "doc" )



    #################################################################################################
    ########                                                                                       ## 
    ########  OUTPUT DOCUMENT LIST: Generate each item in DocumentList                             ##
    ########                                                                                       ##
    #################################################################################################
    <div class="reportBodyCounterContainer">
      #foreach ( $vDoc in $documentList )
        ## set the ContourItem object of the current iteration #
        #set ( $doc = $vDoc.document )
        ## set the DocumentType Key to identify item type #
        #set ( $docTypeKey = $doc.documentType.documentTypeKey )
        #set ($docTypeid = $doc.documentType.id)

        ## set $nextDoc - the next ContourItem in the exported items list #  
        #if ( $foreach.hasNext )
          #set ( $nextIndex = $foreach.index + 1 )
          #set ( $nextDoc = $documentList.get($nextIndex).document )
        #else 
          ## no next item 
          #set ( $nextDoc = false ) 
        #end

        ## Get the heading level compared to the container
        #getHierarchyLevel ($doc $baselineMode $baselineId) ## returns $headingLevel

        #################################################################################################
        ########                                                                                       ## 
        ########  ITEM TYPE MAP: Map each item by its $docTypeKey to formatting specifications.        ##
        ########                                                                                       ##
        #################################################################################################
        
        #set ($descDoc = "#formatRichText ($doc.description)")

        ## <DEFINE ITEM TYPE CONDITIONAL IF BLOCKS HERE>
        #if ($docTypeid == 33) ## Pre-folder Text Rendering   
          <h$headingLevel>$!doc.name</h$headingLevel>
          <p>$!descDoc</p>
        #end
        
          #if ($docTypeid == 32)  ## Only processes Folders
            #set ($validChildItemTypes = [140, 149, 150, 148, 138]) ## Populates childItems Array with only DIRs (149), DS's (150), MRS's (148), SRs (140), and SSRs (138)
            #set ($childItems = [])

            #if ( $baselineMode )
              #set ($parentItemNode = $documentSource.getDocumentNodeForBaseLine(5, $mathTool.toInteger($doc.id), $mathTool.toInteger($baselineId)))
              #set ($parentItemChildNodes = $parentItemNode.getAllChildren()) 
            #else
              #set ($parentItemNode = $documentSource.getDocumentNode(5, $mathTool.toInteger($doc.id)))
              #set ($parentItemChildNodes = $parentItemNode.getAllChildNodes())   
            #end

          #gatherChildItems ($childItems $parentItemChildNodes $validChildItemTypes) ## Fills $childItems 
          <h$headingLevel>$!doc.name</h$headingLevel> ## Folder Heading Rendering
          <p>$!descDoc</p> 
            #if ($docTypeid == 33) ## Post-folder Text Rendering
              <p><b>$!doc.name</b></p>
              <p>$!descDoc</p>
            #end

            #if ($childItems.size() > 0)
              <table>             
                <thead>
                  <tr class="TableHeader" style="width: 100%; font-weight: bold;">
                    <th class="TableCell" style="border: 1px solid black; width: 13%; text-align: center; padding: 3pt;">ID</th>
                    <th class="TableCell" style="border: 1px solid black; width: 15%; text-align: left; padding: 3pt;">Name</th>
                    <th class="TableCell" style="border: 1px solid black; width: 20%; text-align: left; padding: 3pt;">User Need</th>
                    <th class="TableCell" style="border: 1px solid black; width: 28%; text-align: left; padding: 3pt;">Rationale</th>
                    <th class="TableCell" style="border: 1px solid black; width: 8%; text-align: left; padding: 3pt;">User</th>
                    <th class="TableCell" style="border: 1px solid black; width: 6%; text-align: left; padding: 3pt;">Type</th>
                    <th class="TableCell" style="border: 1px solid black; width: 10%; text-align: left; padding: 3pt;">Status</th>
                  </tr>
                </thead>
                <tbody>
                  #foreach ($childItem in $childItems) ## Intializes $childItem Variable (Any function using $childItem must be put in this loop)
                  #set ($rationale = $velocityReportUtil.getValueForField($childItem, "rationale", $dateFormat))
                  #set ($user = $velocityReportUtil.getValueForField($childItem, "user", $dateFormat))
                  #set ($type = $velocityReportUtil.getValueForField($childItem, "requirement_type", $dateFormat))
                  #set ($status = $velocityReportUtil.getValueForField($childItem, "disposition", $dateFormat))
                  #set ($descChild = "#formatRichText ($childItem.description)") 
                  #set ($rationaleRich = "#formatRichText ($rationale)") 
                  #set ($userRich = "#formatRichText ($user)") 
                  #set ($typeRich = "#formatRichText ($type)") 
                  #set ($statusRich = "#formatRichText ($status)") 
                    <tr class="TableCell">
                          <td class="TableCell" style="padding: 3pt text-align: center;">$!childItem.documentKey</td>
                          <td class="TableCell">$!childItem.Name</td>
                          <td class="TableCell">$!descChild</td>
                          <td class="TableCell">$rationaleRich</td>
                          <td class="TableCell">$userRich</td>
                          <td class="TableCell">$typeRich</td>
                          <td class="TableCell">$statusRich</td>
                    </tr>
                  #end
                </tbody>
              </table>
            #end
        #end
      #end

      #################################################################################################
      ########                                                                                       ## 
      ########    CONTEXT IN-SENSITIVE and/or OUTSIDE documentList LOOP REPORT BODY CODE HERE        ##
      ########                                                                                       ## 
      #################################################################################################



    </div> ## <div class="reportBodyCounterContainer">
  </div> ## closes WordSectionPortrait 
</body>
</html>
#########################################################################################################################
#############################
###################################
########################################
###########################################
##
##   TEMPLATE TAIL WORD SPECIFICATIONS
##
###########################################
########################################
###################################
###########################

#if( $format == "doc" )
#########################################################################################################################
##    FIGURE LIST For Word .doc exports
##    $figureList: This list contains the exported images from Jama Connect as base64 content. 
#########################################################################################################################
#foreach( $figure in $figureList)
$figure
#end
#########################################################################################################################

------=_NextPart_01DA8992.E7786AB0
Content-Location: file:///C:/E04B5D12/WordPDFMaster_files/item0001.xml
Content-Type: text/xml; charset="utf-8"

<?xml version="1.0" standalone="no"?><b:Sources xmlns:b="http://schemas.openxmlformats.org/officeDocument/2006/bibliography" xmlns="http://schemas.openxmlformats.org/officeDocument/2006/bibliography" SelectedStyle="\APASixthEditionOfficeOnline.xsl" StyleName="APA" Version="6"></b:Sources>
------=_NextPart_01DA8992.E7786AB0
Content-Location: file:///C:/E04B5D12/WordPDFMaster_files/props002.xml
Content-Type: text/xml; charset="utf-8"

<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<ds:datastoreItem ds:itemID="{34F14231-9515-4CEB-B5F1-2D2337856887}" xmlns:ds="http://schemas.openxmlformats.org/officeDocument/2006/customXml"><ds:schemaRefs><ds:schemaRef ds:uri="http://schemas.openxmlformats.org/officeDocument/2006/bibliography"/></ds:schemaRefs></ds:datastoreItem>
------=_NextPart_01DA8992.E7786AB0
Content-Location: file:///C:/E04B5D12/WordPDFMaster_files/themedata.thmx
Content-Transfer-Encoding: base64
Content-Type: application/vnd.ms-officetheme

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
AAAnAAAAdGhlbWUvdGhlbWUvX3JlbHMvdGhlbWVNYW5hZ2VyLnhtbC5yZWxzhI9NCsIwFIT3gncI
b2/TuhCRJt2I0K3UA4TkNQ02PyRR7O0NriwILodhvplpu5edyRNjMt4xaKoaCDrplXGawW247I5A
UhZOidk7ZLBggo5vN+0VZ5FLKE0mJFIoLjGYcg4nSpOc0IpU+YCuOKOPVuQio6ZByLvQSPd1faDx
mwF8xSS9YhB71QAZllCa/7P9OBqJZy8fFl3+UUFz2YUFKKLGzOAjm6pMBMpburrE3wAAAP//AwBQ
SwECLQAUAAYACAAAACEA6d4Pv/8AAAAcAgAAEwAAAAAAAAAAAAAAAAAAAAAAW0NvbnRlbnRfVHlw
ZXNdLnhtbFBLAQItABQABgAIAAAAIQCl1qfnwAAAADYBAAALAAAAAAAAAAAAAAAAADABAABfcmVs
cy8ucmVsc1BLAQItABQABgAIAAAAIQBreZYWgwAAAIoAAAAcAAAAAAAAAAAAAAAAABkCAAB0aGVt
ZS90aGVtZS90aGVtZU1hbmFnZXIueG1sUEsBAi0AFAAGAAgAAAAhAGeA/LSOBwAAzSAAABYAAAAA
AAAAAAAAAAAA1gIAAHRoZW1lL3RoZW1lL3RoZW1lMS54bWxQSwECLQAUAAYACAAAACEADdGQn7YA
AAAbAQAAJwAAAAAAAAAAAAAAAACYCgAAdGhlbWUvdGhlbWUvX3JlbHMvdGhlbWVNYW5hZ2VyLnht
bC5yZWxzUEsFBgAAAAAFAAUAXQEAAJMLAAAAAA=

------=_NextPart_01DA8992.E7786AB0
Content-ID: image001.jpg
Content-Transfer-Encoding: base64
Content-Type: image/jpeg

/9j/4AAQSkZJRgABAQEA3ADcAAD/2wBDAAIBAQIBAQICAgICAgICAwUDAwMDAwYEBAMFBwYHBwcG
BwcICQsJCAgKCAcHCg0KCgsMDAwMBwkODw0MDgsMDAz/2wBDAQICAgMDAwYDAwYMCAcIDAwMDAwM
DAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAz/wAARCADVAZgDASIA
AhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQA
AAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3
ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWm
p6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEA
AwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSEx
BhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElK
U1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3
uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD9/MUY
oooAMUYoooAMUYoooAMUYoooAMUYoooAMUYoooAMUYrkfiT8cvCXwhsvO8R69p+l/LuEckm6aQf7
MYy7f8BBr5v+KH/BWDRtL8238JaBd6pJyFur5/s8OfUIMuw9jsNPlb2A+vsVjeKvHuh+BbP7RrWs
aZpMOMh7u5SFT9CxGa/Nb4i/t7/FD4kNJH/b0mj20nHkaVH9mx/205k/8eri9D+E3jr4uX32qy0L
xHrs05+a5MEswb6yEEfmav2fcV0foB41/wCCi/wr8Hlkj1i41qZesenWjyfk7bUP4NXlPiz/AIK4
2cTMuheDbq4H8Ml/erDj6oit/wChV474T/4Jt/FLxMFafS7DR426Ne3qfqsZdh9CM16N4b/4JHax
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
kjIz1BB71s6r8S9Jg8G+ItWtpk1S38Nx3BvEtiG+eGPzHiBPylscegJweQa+bPA//BLJfC2utJL4
+1gafJ8s0Nhb/ZJZ0/ul97DHboeCfavo+H4TaXo3wnuPB+jwR6bpsljLZRKq7hEJFZS5zyzEsWJJ
ySSSec1LGfKf7Sf7Aun/ABF0H/hOfhhJCyajAL9tLU4huVZd26A/wtgk7DwScDbjFVP+CUHxD1ib
xR4i8LTTTzaPDZi+jjckrbSiRUIXPTcGJI77PrXs/hD9kfxR8JfCv9i+DfiZqmn6Y8e1odQ06G98
hz954T8vl88heQD611v7Nf7L2h/s0eG7q10yS4vtQ1J1kvb6fAknK52gAcKoySByeTkmnzaai6np
tFFFSMKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKAC
iiigAooooAKKKKAAnAr8vf26/jRN8Zvj1eeZYpYR+HUfSY1Evm+aEmkJkJwMFt3QcAAdetFFVDcU
tj6o/wCCcX7Qc3xK+HkfhSbS47dvCdpHEt2s+77Uu5guU2/KQAP4jn2r6aoopPcYUUUUgCiiigAo
oooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigD/2Q==

------=_NextPart_01DA8992.E7786AB0
Content-Location: file:///C:/E04B5D12/WordPDFMaster_files/colorschememapping.xml
Content-Type: text/xml; charset="utf-8"

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<a:clrMap xmlns:a="http://schemas.openxmlformats.org/drawingml/2006/main" bg1="lt1" tx1="dk1" bg2="lt2" tx2="dk2" accent1="accent1" accent2="accent2" accent3="accent3" accent4="accent4" accent5="accent5" accent6="accent6" hlink="hlink" folHlink="folHlink"/>

#########################################################################################################################
------=_NextPart_01DA8992.E7786AB0
Content-Location: file:///C:/E04B5D12/WordPDFMaster_files/filelist.xml
Content-Type: text/xml; charset="utf-8"

<xml xmlns:o="urn:schemas-microsoft-com:office:office">
 <o:MainFile HRef="../WordPDFMaster.htm"/>
 <o:File HRef="item0001.xml"/>
 <o:File HRef="props002.xml"/>
 <o:File HRef="themedata.thmx"/>
<o:File HRef="image001.jg"/>
 <o:File HRef="colorschememapping.xml"/>
 #foreach( $file in $fileList)
    $!file
 #end
 <o:File HRef="filelist.xml"/>
</xml>
------=_NextPart_01DA8992.E7786AB0--
#end
